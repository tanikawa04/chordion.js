(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["Chordion"] = factory();
	else
		root["Chordion"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 4);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Interval = function () {\n  function Interval(number, name) {\n    _classCallCheck(this, Interval);\n\n    this._number = number;\n    this._name = name;\n  }\n\n  _createClass(Interval, [{\n    key: 'equals',\n    value: function equals(target) {\n      return this._name === target._name;\n    }\n  }, {\n    key: 'number',\n    get: function get() {\n      return this._number;\n    }\n  }, {\n    key: 'name',\n    get: function get() {\n      return this._name;\n    }\n  }]);\n\n  return Interval;\n}();\n\nexports.default = {\n  get P1() {\n    return new Interval(0, 'P1');\n  },\n  get m2() {\n    return new Interval(1, 'm2');\n  },\n  get M2() {\n    return new Interval(2, 'M2');\n  },\n  get m3() {\n    return new Interval(3, 'm3');\n  },\n  get M3() {\n    return new Interval(4, 'M3');\n  },\n  get P4() {\n    return new Interval(5, 'P4');\n  },\n  get A4() {\n    return new Interval(6, 'A4');\n  }, get d5() {\n    return new Interval(6, 'd5');\n  },\n  get P5() {\n    return new Interval(7, 'P5');\n  },\n  get m6() {\n    return new Interval(8, 'm6');\n  }, get A5() {\n    return new Interval(8, 'A5');\n  },\n  get M6() {\n    return new Interval(9, 'M6');\n  }, get d7() {\n    return new Interval(9, 'd7');\n  },\n  get m7() {\n    return new Interval(10, 'm7');\n  },\n  get M7() {\n    return new Interval(11, 'M7');\n  },\n  get P8() {\n    return new Interval(12, 'P8');\n  },\n  get m9() {\n    return new Interval(13, 'm9');\n  },\n  get M9() {\n    return new Interval(14, 'M9');\n  },\n  get m10() {\n    return new Interval(15, 'm10');\n  }, get A9() {\n    return new Interval(15, 'A9');\n  },\n  get M10() {\n    return new Interval(16, 'M10');\n  },\n  get P11() {\n    return new Interval(17, 'P11');\n  },\n  get A11() {\n    return new Interval(18, 'A11');\n  }, get d12() {\n    return new Interval(18, 'd12');\n  },\n  get P12() {\n    return new Interval(19, 'P12');\n  },\n  get m13() {\n    return new Interval(20, 'm13');\n  },\n  get M13() {\n    return new Interval(21, 'M13');\n  },\n  get m14() {\n    return new Interval(22, 'm14');\n  },\n  get M14() {\n    return new Interval(23, 'M14');\n  },\n  get P15() {\n    return new Interval(24, 'P15');\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9pbnRlcnZhbC5qcz80YjIwIl0sIm5hbWVzIjpbIkludGVydmFsIiwibnVtYmVyIiwibmFtZSIsIl9udW1iZXIiLCJfbmFtZSIsInRhcmdldCIsIlAxIiwibTIiLCJNMiIsIm0zIiwiTTMiLCJQNCIsIkE0IiwiZDUiLCJQNSIsIm02IiwiQTUiLCJNNiIsImQ3IiwibTciLCJNNyIsIlA4IiwibTkiLCJNOSIsIm0xMCIsIkE5IiwiTTEwIiwiUDExIiwiQTExIiwiZDEyIiwiUDEyIiwibTEzIiwiTTEzIiwibTE0IiwiTTE0IiwiUDE1Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0lBQU1BLFE7QUFDSixvQkFBWUMsTUFBWixFQUFvQkMsSUFBcEIsRUFBMEI7QUFBQTs7QUFDeEIsU0FBS0MsT0FBTCxHQUFlRixNQUFmO0FBQ0EsU0FBS0csS0FBTCxHQUFhRixJQUFiO0FBQ0Q7Ozs7MkJBVU1HLE0sRUFBUTtBQUNiLGFBQU8sS0FBS0QsS0FBTCxLQUFlQyxPQUFPRCxLQUE3QjtBQUNEOzs7d0JBVlk7QUFDWCxhQUFPLEtBQUtELE9BQVo7QUFDRDs7O3dCQUVVO0FBQ1QsYUFBTyxLQUFLQyxLQUFaO0FBQ0Q7Ozs7OztrQkFPWTtBQUNiLE1BQUlFLEVBQUosR0FBUztBQUFFLFdBQU8sSUFBSU4sUUFBSixDQUFhLENBQWIsRUFBZ0IsSUFBaEIsQ0FBUDtBQUErQixHQUQ3QjtBQUViLE1BQUlPLEVBQUosR0FBUztBQUFFLFdBQU8sSUFBSVAsUUFBSixDQUFhLENBQWIsRUFBZ0IsSUFBaEIsQ0FBUDtBQUErQixHQUY3QjtBQUdiLE1BQUlRLEVBQUosR0FBUztBQUFFLFdBQU8sSUFBSVIsUUFBSixDQUFhLENBQWIsRUFBZ0IsSUFBaEIsQ0FBUDtBQUErQixHQUg3QjtBQUliLE1BQUlTLEVBQUosR0FBUztBQUFFLFdBQU8sSUFBSVQsUUFBSixDQUFhLENBQWIsRUFBZ0IsSUFBaEIsQ0FBUDtBQUErQixHQUo3QjtBQUtiLE1BQUlVLEVBQUosR0FBUztB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QUFBaUMsR0FyQmhDO0FBc0JiLE1BQUlnQyxHQUFKLEdBQVU7QUFBRSxXQUFPLElBQUloQyxRQUFKLENBQWEsRUFBYixFQUFpQixLQUFqQixDQUFQO0FBQWlDLEdBdEJoQztBQXVCYixNQUFJaUMsR0FBSixHQUFVO0FBQUUsV0FBTyxJQUFJakMsUUFBSixDQUFhLEVBQWIsRUFBaUIsS0FBakIsQ0FBUDtBQUFpQyxHQXZCaEM7QUF3QmIsTUFBSWtDLEdBQUosR0FBVTtBQUFFLFdBQU8sSUFBSWxDLFFBQUosQ0FBYSxFQUFiLEVBQWlCLEtBQWpCLENBQVA7QUFBaUMsR0F4QmhDO0FBeUJiLE1BQUltQyxHQUFKLEdBQVU7QUFBRSxXQUFPLElBQUluQyxRQUFKLENBQWEsRUFBYixFQUFpQixLQUFqQixDQUFQO0FBQWlDO0FBekJoQyxDIiwiZmlsZSI6IjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBJbnRlcnZhbCB7XG4gIGNvbnN0cnVjdG9yKG51bWJlciwgbmFtZSkge1xuICAgIHRoaXMuX251bWJlciA9IG51bWJlcjtcbiAgICB0aGlzLl9uYW1lID0gbmFtZTtcbiAgfVxuXG4gIGdldCBudW1iZXIoKSB7XG4gICAgcmV0dXJuIHRoaXMuX251bWJlcjtcbiAgfVxuXG4gIGdldCBuYW1lKCkge1xuICAgIHJldHVybiB0aGlzLl9uYW1lO1xuICB9XG5cbiAgZXF1YWxzKHRhcmdldCkge1xuICAgIHJldHVybiB0aGlzLl9uYW1lID09PSB0YXJnZXQuX25hbWU7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQge1xuICBnZXQgUDEoKSB7IHJldHVybiBuZXcgSW50ZXJ2YWwoMCwgJ1AxJyk7IH0sXG4gIGdldCBtMigpIHsgcmV0dXJuIG5ldyBJbnRlcnZhbCgxLCAnbTInKTsgfSxcbiAgZ2V0IE0yKCkgeyByZXR1cm4gbmV3IEludGVydmFsKDIsICdNMicpOyB9LFxuICBnZXQgbTMoKSB7IHJldHVybiBuZXcgSW50ZXJ2YWwoMywgJ20zJyk7IH0sXG4gIGdldCBNMygpIHsgcmV0dXJuIG5ldyBJbnRlcnZhbCg0LCAnTTMnKTsgfSxcbiAgZ2V0IFA0KCkgeyByZXR1cm4gbmV3IEludGVydmFsKDUsICdQNCcpOyB9LFxuICBnZXQgQTQoKSB7IHJldHVybiBuZXcgSW50ZXJ2YWwoNiwgJ0E0Jyk7IH0sIGdldCBkNSgpIHsgcmV0dXJuIG5ldyBJbnRlcnZhbCg2LCAnZDUnKTsgfSxcbiAgZ2V0IFA1KCkgeyByZXR1cm4gbmV3IEludGVydmFsKDcsICdQNScpOyB9LFxuICBnZXQgbTYoKSB7IHJldHVybiBuZXcgSW50ZXJ2YWwoOCwgJ202Jyk7IH0sIGdldCBBNSgpIHsgcmV0dXJuIG5ldyBJbnRlcnZhbCg4LCAnQTUnKTsgfSxcbiAgZ2V0IE02KCkgeyByZXR1cm4gbmV3IEludGVydmFsKDksICdNNicpOyB9LCBnZXQgZDcoKSB7IHJldHVybiBuZXcgSW50ZXJ2YWwoOSwgJ2Q3Jyk7IH0sXG4gIGdldCBtNygpIHsgcmV0dXJuIG5ldyBJbnRlcnZhbCgxMCwgJ203Jyk7IH0sXG4gIGdldCBNNygpIHsgcmV0dXJuIG5ldyBJbnRlcnZhbCgxMSwgJ003Jyk7IH0sXG4gIGdldCBQOCgpIHsgcmV0dXJuIG5ldyBJbnRlcnZhbCgxMiwgJ1A4Jyk7IH0sXG4gIGdldCBtOSgpIHsgcmV0dXJuIG5ldyBJbnRlcnZhbCgxMywgJ205Jyk7IH0sXG4gIGdldCBNOSgpIHsgcmV0dXJuIG5ldyBJbnRlcnZhbCgxNCwgJ005Jyk7IH0sXG4gIGdldCBtMTAoKSB7IHJldHVybiBuZXcgSW50ZXJ2YWwoMTUsICdtMTAnKTsgfSwgZ2V0IEE5KCkgeyByZXR1cm4gbmV3IEludGVydmFsKDE1LCAnQTknKTsgfSxcbiAgZ2V0IE0xMCgpIHsgcmV0dXJuIG5ldyBJbnRlcnZhbCgxNiwgJ00xMCcpOyB9LFxuICBnZXQgUDExKCkgeyByZXR1cm4gbmV3IEludGVydmFsKDE3LCAnUDExJyk7IH0sXG4gIGdldCBBMTEoKSB7IHJldHVybiBuZXcgSW50ZXJ2YWwoMTgsICdBMTEnKTsgfSwgZ2V0IGQxMigpIHsgcmV0dXJuIG5ldyBJbnRlcnZhbCgxOCwgJ2QxMicpOyB9LFxuICBnZXQgUDEyKCkgeyByZXR1cm4gbmV3IEludGVydmFsKDE5LCAnUDEyJyk7IH0sXG4gIGdldCBtMTMoKSB7IHJldHVybiBuZXcgSW50ZXJ2YWwoMjAsICdtMTMnKTsgfSxcbiAgZ2V0IE0xMygpIHsgcmV0dXJuIG5ldyBJbnRlcnZhbCgyMSwgJ00xMycpOyB9LFxuICBnZXQgbTE0KCkgeyByZXR1cm4gbmV3IEludGVydmFsKDIyLCAnbTE0Jyk7IH0sXG4gIGdldCBNMTQoKSB7IHJldHVybiBuZXcgSW50ZXJ2YWwoMjMsICdNMTQnKTsgfSxcbiAgZ2V0IFAxNSgpIHsgcmV0dXJuIG5ldyBJbnRlcnZhbCgyNCwgJ1AxNScpOyB9LFxufTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2ludGVydmFsLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(11)\nvar ieee754 = __webpack_require__(12)\nvar isArray = __webpack_require__(13)\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)))\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n");

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\n\nexports.__esModule = true;\nvar toString = Object.prototype.toString;\n\nvar isBuffer = typeof Buffer !== 'undefined' ? function isBuffer(obj) {\n  return Buffer.isBuffer(obj);\n} : function isBuffer() {\n  // always return false in browsers\n  return false;\n};\n\nvar getKeys = typeof Object.keys === 'function' ? function getKeys(obj) {\n  return Object.keys(obj);\n} : function getKeys(obj) {\n  var objType = typeof obj;\n\n  if (obj === null || objType !== 'function' && objType !== 'object') {\n    throw new TypeError('obj must be an Object');\n  }\n\n  var resultKeys = [],\n      key = void 0;\n\n  for (key in obj) {\n    Object.prototype.hasOwnProperty.call(obj, key) && resultKeys.push(key);\n  }\n\n  return resultKeys;\n};\n\nvar getSymbols = typeof Symbol === 'function' ? function getSymbols(obj) {\n  return Object.getOwnPropertySymbols(obj);\n} : function getSymbols() {\n  // always return empty Array when Symbol is not supported\n  return [];\n};\n\n// NOTE:\n//\n//   Array.prototype.indexOf is cannot find NaN (in Chrome)\n//   Array.prototype.includes is can find NaN (in Chrome)\n//\n//   this function can find NaN, because use SameValue algorithm\nfunction indexOf(array, s) {\n  if (toString.call(array) !== '[object Array]') {\n    throw new TypeError('array must be an Array');\n  }\n\n  var i = void 0,\n      len = void 0,\n      value = void 0;\n\n  for (i = 0, len = array.length; i < len; ++i) {\n    value = array[i];\n\n    // NOTE:\n    //\n    //   it is SameValue algorithm\n    //   http://stackoverflow.com/questions/27144277/comparing-a-variable-with-itself\n    //\n    // eslint-disable-next-line no-self-compare\n    if (value === s || value !== value && s !== s) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nexports.getKeys = getKeys;\nexports.getSymbols = getSymbols;\nexports.indexOf = indexOf;\nexports.isBuffer = isBuffer;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1).Buffer))\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2RlZXBjb3B5L2xpYi9wb2x5ZmlsbC5qcz9lNzhmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI4Q0FBQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLGlDQUFpQyxTQUFTO0FBQzFDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsNEIiLCJmaWxlIjoiMi5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbnZhciB0b1N0cmluZyA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmc7XG5cbnZhciBpc0J1ZmZlciA9IHR5cGVvZiBCdWZmZXIgIT09ICd1bmRlZmluZWQnID8gZnVuY3Rpb24gaXNCdWZmZXIob2JqKSB7XG4gIHJldHVybiBCdWZmZXIuaXNCdWZmZXIob2JqKTtcbn0gOiBmdW5jdGlvbiBpc0J1ZmZlcigpIHtcbiAgLy8gYWx3YXlzIHJldHVybiBmYWxzZSBpbiBicm93c2Vyc1xuICByZXR1cm4gZmFsc2U7XG59O1xuXG52YXIgZ2V0S2V5cyA9IHR5cGVvZiBPYmplY3Qua2V5cyA9PT0gJ2Z1bmN0aW9uJyA/IGZ1bmN0aW9uIGdldEtleXMob2JqKSB7XG4gIHJldHVybiBPYmplY3Qua2V5cyhvYmopO1xufSA6IGZ1bmN0aW9uIGdldEtleXMob2JqKSB7XG4gIHZhciBvYmpUeXBlID0gdHlwZW9mIG9iajtcblxuICBpZiAob2JqID09PSBudWxsIHx8IG9ialR5cGUgIT09ICdmdW5jdGlvbicgJiYgb2JqVHlwZSAhPT0gJ29iamVjdCcpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdvYmogbXVzdCBiZSBhbiBPYmplY3QnKTtcbiAgfVxuXG4gIHZhciByZXN1bHRLZXlzID0gW10sXG4gICAgICBrZXkgPSB2b2lkIDA7XG5cbiAgZm9yIChrZXkgaW4gb2JqKSB7XG4gICAgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSAmJiByZXN1bHRLZXlzLnB1c2goa2V5KTtcbiAgfVxuXG4gIHJldHVybiByZXN1bHRLZXlzO1xufTtcblxudmFyIGdldFN5bWJvbHMgPSB0eXBlb2YgU3ltYm9sID09PSAnZnVuY3Rpb24nID8gZnVuY3Rpb24gZ2V0U3ltYm9scyhvYmopIHtcbiAgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqKTtcbn0gOiBmdW5jdGlvbiBnZXRTeW1ib2xzKCkge1xuICAvLyBhbHdheXMgcmV0dXJuIGVtcHR5IEFycmF5IHdoZW4gU3ltYm9sIGlzIG5vdCBzdXBwb3J0ZWRcbiAgcmV0dXJuIFtdO1xufTtcblxuLy8gTk9URTpcbi8vXG4vLyAgIEFycmF5LnByb3RvdHlwZS5pbmRleE9mIGlzIGNhbm5vdCBmaW5kIE5hTiAoaW4gQ2hyb21lKVxuLy8gICBBcnJheS5wcm90b3R5cGUuaW5jbHVkZXMgaXMgY2FuIGZpbmQgTmFOIChpbiBDaHJvbWUpXG4vL1xuLy8gICB0aGlzIGZ1bmN0aW9uIGNhbiBmaW5kIE5hTiwgYmVjYXVzZSB1c2UgU2FtZVZhbHVlIGFsZ29yaXRobVxuZnVuY3Rpb24gaW5kZXhPZihhcnJheSwgcykge1xuICBpZiAodG9TdHJpbmcuY2FsbChhcnJheSkgIT09ICdbb2JqZWN0IEFycmF5XScpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdhcnJheSBtdXN0IGJlIGFuIEFycmF5Jyk7XG4gIH1cblxuICB2YXIgaSA9IHZvaWQgMCxcbiAgICAgIGxlbiA9IHZvaWQgMCxcbiAgICAgIHZhbHVlID0gdm9pZCAwO1xuXG4gIGZvciAoaSA9IDAsIGxlbiA9IGFycmF5Lmxlbmd0aDsgaSA8IGxlbjsgKytpKSB7XG4gICAgdmFsdWUgPSBhcnJheVtpXTtcblxuICAgIC8vIE5PVEU6XG4gICAgLy9cbiAgICAvLyAgIGl0IGlzIFNhbWVWYWx1ZSBhbGdvcml0aG1cbiAgICAvLyAgIGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMjcxNDQyNzcvY29tcGFyaW5nLWEtdmFyaWFibGUtd2l0aC1pdHNlbGZcbiAgICAvL1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmVcbiAgICBpZiAodmFsdWUgPT09IHMgfHwgdmFsdWUgIT09IHZhbHVlICYmIHMgIT09IHMpIHtcbiAgICAgIHJldHVybiBpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiAtMTtcbn1cblxuZXhwb3J0cy5nZXRLZXlzID0gZ2V0S2V5cztcbmV4cG9ydHMuZ2V0U3ltYm9scyA9IGdldFN5bWJvbHM7XG5leHBvcnRzLmluZGV4T2YgPSBpbmRleE9mO1xuZXhwb3J0cy5pc0J1ZmZlciA9IGlzQnVmZmVyO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL25vZGVfbW9kdWxlcy9kZWVwY29weS9saWIvcG9seWZpbGwuanNcbi8vIG1vZHVsZSBpZCA9IDJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2\n");

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _interval = __webpack_require__(0);\n\nvar _interval2 = _interopRequireDefault(_interval);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _symbol = Symbol();\n\nvar ChordType = function () {\n  function ChordType(symbol, intervals, name) {\n    _classCallCheck(this, ChordType);\n\n    if (symbol !== _symbol) {\n      throw new Error('Cannot call constructor of ChordType.');\n    }\n    this._intervals = intervals;\n    this._name = name;\n  }\n\n  _createClass(ChordType, [{\n    key: 'equals',\n    value: function equals(target) {\n      return this.name === target.name;\n    }\n  }, {\n    key: 'intervals',\n    get: function get() {\n      return [].concat(_toConsumableArray(this._intervals));\n    }\n  }, {\n    key: 'name',\n    get: function get() {\n      return this._name;\n    }\n  }], [{\n    key: 'MAJOR',\n    get: function get() {\n      return new ChordType(_symbol, [_interval2.default.P1, _interval2.default.M3, _interval2.default.P5], 'M');\n    }\n  }, {\n    key: 'SUSPENDED_FOURTH',\n    get: function get() {\n      return new ChordType(_symbol, [_interval2.default.P1, _interval2.default.P4, _interval2.default.P5], 'sus4');\n    }\n  }, {\n    key: 'AUGMENT',\n    get: function get() {\n      return new ChordType(_symbol, [_interval2.default.P1, _interval2.default.M3, _interval2.default.A5], 'aug');\n    }\n  }, {\n    key: 'MINOR',\n    get: function get() {\n      return new ChordType(_symbol, [_interval2.default.P1, _interval2.default.m3, _interval2.default.P5], 'm');\n    }\n  }, {\n    key: 'DIMINISH',\n    get: function get() {\n      return new ChordType(_symbol, [_interval2.default.P1, _interval2.default.m3, _interval2.default.d5], 'dim');\n    }\n  }, {\n    key: 'MAJOR_SEVENTH',\n    get: function get() {\n      return new ChordType(_symbol, [_interval2.default.P1, _interval2.default.M3, _interval2.default.P5, _interval2.default.M7], 'M7');\n    }\n  }, {\n    key: 'SEVENTH',\n    get: function get() {\n      return new ChordType(_symbol, [_interval2.default.P1, _interval2.default.M3, _interval2.default.P5, _interval2.default.m7], '7');\n    }\n  }, {\n    key: 'SEVENTH_SUSPENDED_FOURTH',\n    get: function get() {\n      return new ChordType(_symbol, [_interval2.default.P1, _interval2.default.P4, _interval2.default.P5, _interval2.default.m7], '7sus4');\n    }\n  }, {\n    key: 'ADD_NINTH',\n    get: function get() {\n      return new ChordType(_symbol, [_interval2.default.P1, _interval2.default.M3, _interval2.default.P5, _interval2.default.M9], 'add9');\n    }\n  }, {\n    key: 'SIXTH',\n    get: function get() {\n      return new ChordType(_symbol, [_interval2.default.P1, _interval2.default.M3, _interval2.default.P5, _interval2.default.M6], '6');\n    }\n  }, {\n    key: 'AUGMENT_SEVENTH',\n    get: function get() {\n      return new ChordType(_symbol, [_interval2.default.P1, _interval2.default.M3, _interval2.default.m6, _interval2.default.m7], 'aug7');\n    }\n  }, {\n    key: 'MINOR_SEVENTH',\n    get: function get() {\n      return new ChordType(_symbol, [_interval2.default.P1, _interval2.default.m3, _interval2.default.P5, _interval2.default.m7], 'm7');\n    }\n  }, {\n    key: 'MINOR_MAJOR_SEVENTH',\n    get: function get() {\n      return new ChordType(_symbol, [_interval2.default.P1, _interval2.default.m3, _interval2.default.P5, _interval2.default.M7], 'mM7');\n    }\n  }, {\n    key: 'MINOR_ADD_NINTH',\n    get: function get() {\n      return new ChordType(_symbol, [_interval2.default.P1, _interval2.default.m3, _interval2.default.P5, _interval2.default.M9], 'madd9');\n    }\n  }, {\n    key: 'MINOR_SIXTH',\n    get: function get() {\n      return new ChordType(_symbol, [_interval2.default.P1, _interval2.default.m3, _interval2.default.P5, _interval2.default.M6], 'm6');\n    }\n  }, {\n    key: 'HALF_DIMINISH',\n    get: function get() {\n      return new ChordType(_symbol, [_interval2.default.P1, _interval2.default.m3, _interval2.default.d5, _interval2.default.m7], 'φ');\n    }\n  }, {\n    key: 'DIMINISH_SEVENTH',\n    get: function get() {\n      return new ChordType(_symbol, [_interval2.default.P1, _interval2.default.m3, _interval2.default.d5, _interval2.default.d7], 'dim7');\n    }\n  }]);\n\n  return ChordType;\n}();\n\n/*\n- AUGMENT_MAJOR_SEVENTH\n- AUGMENT_SIXTH\n*/\n\n\nexports.default = ChordType;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jaG9yZC10eXBlLmpzPzUwMGEiXSwibmFtZXMiOlsiX3N5bWJvbCIsIlN5bWJvbCIsIkNob3JkVHlwZSIsInN5bWJvbCIsImludGVydmFscyIsIm5hbWUiLCJFcnJvciIsIl9pbnRlcnZhbHMiLCJfbmFtZSIsInRhcmdldCIsIlAxIiwiTTMiLCJQNSIsIlA0IiwiQTUiLCJtMyIsImQ1IiwiTTciLCJtNyIsIk05IiwiTTYiLCJtNiIsImQ3Il0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOzs7Ozs7Ozs7O0FBRUEsSUFBTUEsVUFBVUMsUUFBaEI7O0lBRXFCQyxTO0FBQ25CLHFCQUFZQyxNQUFaLEVBQW9CQyxTQUFwQixFQUErQkMsSUFBL0IsRUFBcUM7QUFBQTs7QUFDbkMsUUFBSUYsV0FBV0gsT0FBZixFQUF3QjtBQUN0QixZQUFNLElBQUlNLEtBQUosQ0FBVSx1Q0FBVixDQUFOO0FBQ0Q7QUFDRCxTQUFLQyxVQUFMLEdBQWtCSCxTQUFsQjtBQUNBLFNBQUtJLEtBQUwsR0FBYUgsSUFBYjtBQUNEOzs7OzJCQVVNSSxNLEVBQVE7QUFDYixhQUFPLEtBQUtKLElBQUwsS0FBY0ksT0FBT0osSUFBNUI7QUFDRDs7O3dCQVZlO0FBQ2QsMENBQVcsS0FBS0UsVUFBaEI7QUFDRDs7O3dCQUVVO0FBQ1QsYUFBTyxLQUFLQyxLQUFaO0FBQ0Q7Ozt3QkFNa0I7QUFDakIsYUFBTyxJQUFJTixTQUFKLENBQWNGLE9BQWQsRUFBdUIsQ0FBQyxtQkFBU1UsRUFBVixFQUFjLG1CQUFTQyxFQUF2QixFQUEyQixtQkFBU0MsRUFBcEMsQ0FBdkIsRUFBZ0UsR0FBaEUsQ0FBUDtBQUNEOzs7d0JBRTZCO0FBQzVCLGFBQU8sSUFBSVYsU0FBSixDQUFjRixPQUFkLEVBQXVCLENBQUMsbUJBQVNVLEVBQVYsRUFBYyxtQkFBU0csRUFBdkIsRUFBMkIsbUJBQVNELEVBQXBDLENBQXZCLEVBQWdFLE1BQWhFLENBQVA7QUFDRDs7O3dCQUVvQjtBQUNuQixhQUFPLElB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QUEyQixtQkFBU0gsRUFBcEMsRUFBd0MsbUJBQVNRLEVBQWpELENBQXZCLEVBQTZFLElBQTdFLENBQVA7QUFDRDs7O3dCQUUwQjtBQUN6QixhQUFPLElBQUlsQixTQUFKLENBQWNGLE9BQWQsRUFBdUIsQ0FBQyxtQkFBU1UsRUFBVixFQUFjLG1CQUFTSyxFQUF2QixFQUEyQixtQkFBU0MsRUFBcEMsRUFBd0MsbUJBQVNFLEVBQWpELENBQXZCLEVBQTZFLEdBQTdFLENBQVA7QUFDRDs7O3dCQUU2QjtBQUM1QixhQUFPLElBQUloQixTQUFKLENBQWNGLE9BQWQsRUFBdUIsQ0FBQyxtQkFBU1UsRUFBVixFQUFjLG1CQUFTSyxFQUF2QixFQUEyQixtQkFBU0MsRUFBcEMsRUFBd0MsbUJBQVNNLEVBQWpELENBQXZCLEVBQTZFLE1BQTdFLENBQVA7QUFDRDs7Ozs7O0FBSUg7Ozs7OztrQkEzRnFCcEIsUyIsImZpbGUiOiIzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEludGVydmFsIGZyb20gJy4vaW50ZXJ2YWwnO1xuXG5jb25zdCBfc3ltYm9sID0gU3ltYm9sKCk7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENob3JkVHlwZSB7XG4gIGNvbnN0cnVjdG9yKHN5bWJvbCwgaW50ZXJ2YWxzLCBuYW1lKSB7XG4gICAgaWYgKHN5bWJvbCAhPT0gX3N5bWJvbCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdDYW5ub3QgY2FsbCBjb25zdHJ1Y3RvciBvZiBDaG9yZFR5cGUuJyk7XG4gICAgfVxuICAgIHRoaXMuX2ludGVydmFscyA9IGludGVydmFscztcbiAgICB0aGlzLl9uYW1lID0gbmFtZTtcbiAgfVxuXG4gIGdldCBpbnRlcnZhbHMoKSB7XG4gICAgcmV0dXJuIFsuLi50aGlzLl9pbnRlcnZhbHNdO1xuICB9XG5cbiAgZ2V0IG5hbWUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX25hbWU7XG4gIH1cblxuICBlcXVhbHModGFyZ2V0KSB7XG4gICAgcmV0dXJuIHRoaXMubmFtZSA9PT0gdGFyZ2V0Lm5hbWU7XG4gIH1cblxuICBzdGF0aWMgZ2V0IE1BSk9SKCkge1xuICAgIHJldHVybiBuZXcgQ2hvcmRUeXBlKF9zeW1ib2wsIFtJbnRlcnZhbC5QMSwgSW50ZXJ2YWwuTTMsIEludGVydmFsLlA1XSwgJ00nKTtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgU1VTUEVOREVEX0ZPVVJUSCgpIHtcbiAgICByZXR1cm4gbmV3IENob3JkVHlwZShfc3ltYm9sLCBbSW50ZXJ2YWwuUDEsIEludGVydmFsLlA0LCBJbnRlcnZhbC5QNV0sICdzdXM0Jyk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IEFVR01FTlQoKSB7XG4gICAgcmV0dXJuIG5ldyBDaG9yZFR5cGUoX3N5bWJvbCwgW0ludGVydmFsLlAxLCBJbnRlcnZhbC5NMywgSW50ZXJ2YWwuQTVdLCAnYXVnJyk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IE1JTk9SKCkge1xuICAgIHJldHVybiBuZXcgQ2hvcmRUeXBlKF9zeW1ib2wsIFtJbnRlcnZhbC5QMSwgSW50ZXJ2YWwubTMsIEludGVydmFsLlA1XSwgJ20nKTtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgRElNSU5JU0goKSB7XG4gICAgcmV0dXJuIG5ldyBDaG9yZFR5cGUoX3N5bWJvbCwgW0ludGVydmFsLlAxLCBJbnRlcnZhbC5tMywgSW50ZXJ2YWwuZDVdLCAnZGltJyk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IE1BSk9SX1NFVkVOVEgoKSB7XG4gICAgcmV0dXJuIG5ldyBDaG9yZFR5cGUoX3N5bWJvbCwgW0ludGVydmFsLlAxLCBJbnRlcnZhbC5NMywgSW50ZXJ2YWwuUDUsIEludGVydmFsLk03XSwgJ003Jyk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IFNFVkVOVEgoKSB7XG4gICAgcmV0dXJuIG5ldyBDaG9yZFR5cGUoX3N5bWJvbCwgW0ludGVydmFsLlAxLCBJbnRlcnZhbC5NMywgSW50ZXJ2YWwuUDUsIEludGVydmFsLm03XSwgJzcnKTtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgU0VWRU5USF9TVVNQRU5ERURfRk9VUlRIKCkge1xuICAgIHJldHVybiBuZXcgQ2hvcmRUeXBlKF9zeW1ib2wsIFtJbnRlcnZhbC5QMSwgSW50ZXJ2YWwuUDQsIEludGVydmFsLlA1LCBJbnRlcnZhbC5tN10sICc3c3VzNCcpO1xuICB9XG5cbiAgc3RhdGljIGdldCBBRERfTklOVEgoKSB7XG4gICAgcmV0dXJuIG5ldyBDaG9yZFR5cGUoX3N5bWJvbCwgW0ludGVydmFsLlAxLCBJbnRlcnZhbC5NMywgSW50ZXJ2YWwuUDUsIEludGVydmFsLk05XSwgJ2FkZDknKTtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgU0lYVEgoKSB7XG4gICAgcmV0dXJuIG5ldyBDaG9yZFR5cGUoX3N5bWJvbCwgW0ludGVydmFsLlAxLCBJbnRlcnZhbC5NMywgSW50ZXJ2YWwuUDUsIEludGVydmFsLk02XSwgJzYnKTtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgQVVHTUVOVF9TRVZFTlRIKCkge1xuICAgIHJldHVybiBuZXcgQ2hvcmRUeXBlKF9zeW1ib2wsIFtJbnRlcnZhbC5QMSwgSW50ZXJ2YWwuTTMsIEludGVydmFsLm02LCBJbnRlcnZhbC5tN10sICdhdWc3Jyk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IE1JTk9SX1NFVkVOVEgoKSB7XG4gICAgcmV0dXJuIG5ldyBDaG9yZFR5cGUoX3N5bWJvbCwgW0ludGVydmFsLlAxLCBJbnRlcnZhbC5tMywgSW50ZXJ2YWwuUDUsIEludGVydmFsLm03XSwgJ203Jyk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IE1JTk9SX01BSk9SX1NFVkVOVEgoKSB7XG4gICAgcmV0dXJuIG5ldyBDaG9yZFR5cGUoX3N5bWJvbCwgW0ludGVydmFsLlAxLCBJbnRlcnZhbC5tMywgSW50ZXJ2YWwuUDUsIEludGVydmFsLk03XSwgJ21NNycpO1xuICB9XG5cbiAgc3RhdGljIGdldCBNSU5PUl9BRERfTklOVEgoKSB7XG4gICAgcmV0dXJuIG5ldyBDaG9yZFR5cGUoX3N5bWJvbCwgW0ludGVydmFsLlAxLCBJbnRlcnZhbC5tMywgSW50ZXJ2YWwuUDUsIEludGVydmFsLk05XSwgJ21hZGQ5Jyk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IE1JTk9SX1NJWFRIKCkge1xuICAgIHJldHVybiBuZXcgQ2hvcmRUeXBlKF9zeW1ib2wsIFtJbnRlcnZhbC5QMSwgSW50ZXJ2YWwubTMsIEludGVydmFsLlA1LCBJbnRlcnZhbC5NNl0sICdtNicpO1xuICB9XG5cbiAgc3RhdGljIGdldCBIQUxGX0RJTUlOSVNIKCkge1xuICAgIHJldHVybiBuZXcgQ2hvcmRUeXBlKF9zeW1ib2wsIFtJbnRlcnZhbC5QMSwgSW50ZXJ2YWwubTMsIEludGVydmFsLmQ1LCBJbnRlcnZhbC5tN10sICfPhicpO1xuICB9XG5cbiAgc3RhdGljIGdldCBESU1JTklTSF9TRVZFTlRIKCkge1xuICAgIHJldHVybiBuZXcgQ2hvcmRUeXBlKF9zeW1ib2wsIFtJbnRlcnZhbC5QMSwgSW50ZXJ2YWwubTMsIEludGVydmFsLmQ1LCBJbnRlcnZhbC5kN10sICdkaW03Jyk7XG4gIH1cbn1cblxuXG4vKlxuLSBBVUdNRU5UX01BSk9SX1NFVkVOVEhcbi0gQVVHTUVOVF9TSVhUSFxuKi9cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2Nob3JkLXR5cGUuanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///3\n");

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Interval = exports.ChordType = exports.Chord = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _parseChord2 = __webpack_require__(5);\n\nvar _parseChord3 = _interopRequireDefault(_parseChord2);\n\nvar _chord = __webpack_require__(6);\n\nvar _chord2 = _interopRequireDefault(_chord);\n\nvar _chordType = __webpack_require__(3);\n\nvar _chordType2 = _interopRequireDefault(_chordType);\n\nvar _interval = __webpack_require__(0);\n\nvar _interval2 = _interopRequireDefault(_interval);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction validate(chord) {\n  return;\n}\n\nvar Chordion = function () {\n  function Chordion() {\n    _classCallCheck(this, Chordion);\n  }\n\n  _createClass(Chordion, null, [{\n    key: 'parse',\n    value: function parse(text) {\n      var validation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      var chord = void 0;\n      try {\n        var _parseChord = (0, _parseChord3.default)(text),\n            root = _parseChord.root,\n            type = _parseChord.type,\n            tensions = _parseChord.tensions,\n            bass = _parseChord.bass;\n\n        chord = new _chord2.default(root, type, tensions, bass);\n      } catch (err) {\n        throw err;\n      }\n\n      if (validation) {\n        validate(chord);\n      }\n\n      return chord;\n    }\n  }]);\n\n  return Chordion;\n}();\n\nexports.default = Chordion;\nexports.Chord = _chord2.default;\nexports.ChordType = _chordType2.default;\nexports.Interval = _interval2.default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9pbmRleC5qcz8yNjQ1Il0sIm5hbWVzIjpbInZhbGlkYXRlIiwiY2hvcmQiLCJDaG9yZGlvbiIsInRleHQiLCJ2YWxpZGF0aW9uIiwicm9vdCIsInR5cGUiLCJ0ZW5zaW9ucyIsImJhc3MiLCJlcnIiLCJDaG9yZCIsIkNob3JkVHlwZSIsIkludGVydmFsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7Ozs7Ozs7QUFFQSxTQUFTQSxRQUFULENBQWtCQyxLQUFsQixFQUF5QjtBQUN2QjtBQUNEOztJQUVvQkMsUTs7Ozs7OzswQkFDTkMsSSxFQUF5QjtBQUFBLFVBQW5CQyxVQUFtQix1RUFBTixJQUFNOztBQUNwQyxVQUFJSCxjQUFKO0FBQ0EsVUFBSTtBQUFBLDBCQUNtQywwQkFBV0UsSUFBWCxDQURuQztBQUFBLFlBQ0tFLElBREwsZUFDS0EsSUFETDtBQUFBLFlBQ1dDLElBRFgsZUFDV0EsSUFEWDtBQUFBLFlBQ2lCQyxRQURqQixlQUNpQkEsUUFEakI7QUFBQSxZQUMyQkMsSUFEM0IsZUFDMkJBLElBRDNCOztBQUVGUCxnQkFBUSxvQkFBVUksSUFBVixFQUFnQkMsSUFBaEIsRUFBc0JDLFFBQXRCLEVBQWdDQyxJQUFoQyxDQUFSO0FBQ0QsT0FIRCxDQUdFLE9BQU9DLEdBQVAsRUFBWTtBQUNaLGNBQU1BLEdBQU47QUFDRDs7QUFFRCxVQUFJTCxVQUFKLEVBQWdCO0FBQ2RKLGlCQUFTQyxLQUFUO0FBQ0Q7O0FBRUQsYUFBT0EsS0FBUDtBQUNEOzs7Ozs7a0JBZmtCQyxRO1FBbUJuQlEsSztRQUNBQyxTO1FBQ0FDLFEiLCJmaWxlIjoiNC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBwYXJzZUNob3JkIGZyb20gJy4vcGFyc2UtY2hvcmQnO1xuaW1wb3J0IENob3JkIGZyb20gJy4vY2hvcmQnO1xuaW1wb3J0IENob3JkVHlwZSBmcm9tICcuL2Nob3JkLXR5cGUnO1xuaW1wb3J0IEludGVydmFsIGZyb20gJy4vaW50ZXJ2YWwnO1xuXG5mdW5jdGlvbiB2YWxpZGF0ZShjaG9yZCkge1xuICByZXR1cm47XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENob3JkaW9uIHtcbiAgc3RhdGljIHBhcnNlKHRleHQsIHZhbGlkYXRpb24gPSB0cnVlKSB7XG4gICAgbGV0IGNob3JkO1xuICAgIHRyeSB7XG4gICAgICBjb25zdCB7cm9vdCwgdHlwZSwgdGVuc2lvbnMsIGJhc3N9ID0gcGFyc2VDaG9yZCh0ZXh0KTtcbiAgICAgIGNob3JkID0gbmV3IENob3JkKHJvb3QsIHR5cGUsIHRlbnNpb25zLCBiYXNzKTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIHRocm93IGVycjtcbiAgICB9XG5cbiAgICBpZiAodmFsaWRhdGlvbikge1xuICAgICAgdmFsaWRhdGUoY2hvcmQpO1xuICAgIH1cblxuICAgIHJldHVybiBjaG9yZDtcbiAgfVxufVxuXG5leHBvcnQge1xuICBDaG9yZCxcbiAgQ2hvcmRUeXBlLFxuICBJbnRlcnZhbFxufTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2luZGV4LmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///4\n");

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = function () {\n\t\"use strict\";\n\t/*\n  * Generated by snake parser 0.2.4.1\n  */\n\n\tfunction $parse($input, options) {\n\t\toptions = options || {};\n\t\tvar $inputLength = $input.length;\n\t\tvar $pos = 0;\n\t\tvar $objs = [];\n\t\tvar $objsLen = 0;\n\t\tvar $memo = [];\n\t\tvar $matchTable = new Array($inputLength);\n\t\tvar $errorMask = 0;\n\t\tvar $failMatchs = [];\n\t\tvar $failPos = 0;\n\t\tvar $failureObj = {};\n\n\t\tfunction check(seq, tensions) {\n\t\t\tvar i = 0,\n\t\t\t    j = 0;\n\t\t\twhile (seq[i] && tensions[j]) {\n\t\t\t\tif (seq[i] === tensions[j++]) i += 1;\n\t\t\t}return !seq[i];\n\t\t}\n\n\t\tfunction mod$0($) {\n\t\t\treturn $.join('');\n\t\t};\n\n\t\tfunction rule$start() {\n\t\t\tvar pos0 = $pos,\n\t\t\t    objsLen0 = $objsLen;\n\t\t\trule$chord();\n\t\t};\n\n\t\tfunction rule$chord() {\n\t\t\tvar key = $pos * 18 + 0,\n\t\t\t    pos0 = $pos,\n\t\t\t    objsLen0 = $objsLen;\n\t\t\tif ($readMemo(key)) return;\n\t\t\trule$root();\n\t\t\tif ($pos !== -1) {\n\t\t\t\tif ($objsLen === objsLen0) $objs[objsLen0] = undefined;\n\t\t\t\t$objs[objsLen0 + 1] = \"root\";\n\t\t\t\t$objsLen = objsLen0 + 2;\n\t\t\t}\n\t\t\tif ($pos !== -1) {\n\t\t\t\tvar objsLen1 = $objsLen;\n\t\t\t\trule$type();\n\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\tif ($objsLen === objsLen1) $objs[objsLen1] = undefined;\n\t\t\t\t\t$objs[objsLen1 + 1] = \"type\";\n\t\t\t\t\t$objsLen = objsLen1 + 2;\n\t\t\t\t}\n\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\tvar objsLen1 = $objsLen;\n\t\t\t\t\tvar pos1 = $pos;\n\t\t\t\t\trule$tensions();\n\t\t\t\t\tif ($pos === -1) {\n\t\t\t\t\t\t$pos = pos1;\n\t\t\t\t\t\t$objsLen = objsLen1;\n\t\t\t\t\t}\n\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\tif ($objsLen === objsLen1) $objs[objsLen1] = undefined;\n\t\t\t\t\t\t$objs[objsLen1 + 1] = \"tensions\";\n\t\t\t\t\t\t$objsLen = objsLen1 + 2;\n\t\t\t\t\t}\n\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\tvar objsLen1 = $objsLen;\n\t\t\t\t\t\tvar pos1 = $pos;\n\t\t\t\t\t\trule$bass();\n\t\t\t\t\t\tif ($pos === -1) {\n\t\t\t\t\t\t\t$pos = pos1;\n\t\t\t\t\t\t\t$objsLen = objsLen1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t\tif ($objsLen === objsLen1) $objs[objsLen1] = undefined;\n\t\t\t\t\t\t\t$objs[objsLen1 + 1] = \"bass\";\n\t\t\t\t\t\t\t$objsLen = objsLen1 + 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($pos !== -1) {\n\t\t\t\tvar obj0 = {};\n\t\t\t\tfor (var i = objsLen0; i < $objsLen; i += 2) {\n\t\t\t\t\tobj0[$objs[i + 1]] = $objs[i];\n\t\t\t\t}$objsLen = objsLen0 + 1;\n\t\t\t\t$objs[objsLen0] = obj0;\n\t\t\t}\n\t\t\t$writeMemo(key, $pos !== -1 && $objs.slice(objsLen0, $objsLen));\n\t\t};\n\n\t\tfunction rule$root() {\n\t\t\tvar key = $pos * 18 + 1,\n\t\t\t    pos0 = $pos,\n\t\t\t    objsLen0 = $objsLen;\n\t\t\tif ($readMemo(key)) return;\n\t\t\trule$pitchClass();\n\t\t\tif ($pos !== -1) {\n\t\t\t\tvar pos1 = $pos,\n\t\t\t\t    objsLen1 = $objsLen;\n\t\t\t\trule$accidental();\n\t\t\t\tif ($pos === -1) {\n\t\t\t\t\t$pos = pos1;\n\t\t\t\t\t$objsLen = objsLen1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($pos !== -1) {\n\t\t\t\t$objs[objsLen0] = $objs.slice(objsLen0, $objsLen);\n\t\t\t\t$objsLen = objsLen0 + 1;\n\t\t\t}\n\t\t\tif ($pos !== -1) {\n\t\t\t\t$objs[objsLen0] = mod$0($objs[objsLen0]);\n\t\t\t\t$objsLen = objsLen0 + 1;\n\t\t\t}\n\t\t\t$writeMemo(key, $pos !== -1 && $objs.slice(objsLen0, $objsLen));\n\t\t};\n\n\t\tfunction rule$type() {\n\t\t\tvar key = $pos * 18 + 2,\n\t\t\t    pos0 = $pos,\n\t\t\t    objsLen0 = $objsLen;\n\t\t\tif ($readMemo(key)) return;\n\t\t\tif ($input.substr($pos, 4) === \"add9\") $pos += 4;else $matchingFail(\"\\\"add9\\\"\");\n\t\t\tif ($pos !== -1) {\n\t\t\t\t$objs[$objsLen++] = \"ADD_NINTH\";\n\t\t\t}\n\t\t\tif ($pos === -1) {\n\t\t\t\t$pos = pos0;\n\t\t\t\t$objsLen = objsLen0;\n\t\t\t\trule$major();\n\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\tif ($input.charCodeAt($pos) === 55) $pos += 1;else $matchingFail(\"\\\"7\\\"\");\n\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t$objs[$objsLen++] = \"MAJOR_SEVENTH\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ($pos === -1) {\n\t\t\t\t\t$pos = pos0;\n\t\t\t\t\t$objsLen = objsLen0;\n\t\t\t\t\tif ($input.substr($pos, 5) === \"7sus4\") $pos += 5;else $matchingFail(\"\\\"7sus4\\\"\");\n\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t$objs[$objsLen++] = \"SEVENTH_SUSPENDED_FOURTH\";\n\t\t\t\t\t}\n\t\t\t\t\tif ($pos === -1) {\n\t\t\t\t\t\t$pos = pos0;\n\t\t\t\t\t\t$objsLen = objsLen0;\n\t\t\t\t\t\tif ($input.charCodeAt($pos) === 55) $pos += 1;else $matchingFail(\"\\\"7\\\"\");\n\t\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t\t$objs[$objsLen++] = \"SEVENTH\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ($pos === -1) {\n\t\t\t\t\t\t\t$pos = pos0;\n\t\t\t\t\t\t\t$objsLen = objsLen0;\n\t\t\t\t\t\t\tif ($input.charCodeAt($pos) === 54) $pos += 1;else $matchingFail(\"\\\"6\\\"\");\n\t\t\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t\t\t$objs[$objsLen++] = \"SIXTH\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ($pos === -1) {\n\t\t\t\t\t\t\t\t$pos = pos0;\n\t\t\t\t\t\t\t\t$objsLen = objsLen0;\n\t\t\t\t\t\t\t\tif ($input.substr($pos, 4) === \"sus4\") $pos += 4;else $matchingFail(\"\\\"sus4\\\"\");\n\t\t\t\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t\t\t\t$objs[$objsLen++] = \"SUSPENDED_FOURTH\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif ($pos === -1) {\n\t\t\t\t\t\t\t\t\t$pos = pos0;\n\t\t\t\t\t\t\t\t\t$objsLen = objsLen0;\n\t\t\t\t\t\t\t\t\trule$minor();\n\t\t\t\t\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t\t\t\t\tif ($input.substr($pos, 4) === \"add9\") $pos += 4;else $matchingFail(\"\\\"add9\\\"\");\n\t\t\t\t\t\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t\t\t\t\t\t$objs[$objsLen++] = \"MINOR_ADD_NINTH\";\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif ($pos === -1) {\n\t\t\t\t\t\t\t\t\t\t$pos = pos0;\n\t\t\t\t\t\t\t\t\t\t$objsLen = objsLen0;\n\t\t\t\t\t\t\t\t\t\trule$minor();\n\t\t\t\t\t\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t\t\t\t\t\trule$major();\n\t\t\t\t\t\t\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t\t\t\t\t\t\tif ($input.charCodeAt($pos) === 55) $pos += 1;else $matchingFail(\"\\\"7\\\"\");\n\t\t\t\t\t\t\t\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t$objs[$objsLen++] = \"MINOR_MAJOR_SEVENTH\";\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif ($pos === -1) {\n\t\t\t\t\t\t\t\t\t\t\t$pos = pos0;\n\t\t\t\t\t\t\t\t\t\t\t$objsLen = objsLen0;\n\t\t\t\t\t\t\t\t\t\t\trule$minor();\n\t\t\t\t\t\t\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t\t\t\t\t\t\tif ($input.charCodeAt($pos) === 55) $pos += 1;else $matchingFail(\"\\\"7\\\"\");\n\t\t\t\t\t\t\t\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t$objs[$objsLen++] = \"MINOR_SEVENTH\";\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tif ($pos === -1) {\n\t\t\t\t\t\t\t\t\t\t\t\t$pos = pos0;\n\t\t\t\t\t\t\t\t\t\t\t\t$objsLen = objsLen0;\n\t\t\t\t\t\t\t\t\t\t\t\trule$minor();\n\t\t\t\t\t\t\t\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tif ($input.charCodeAt($pos) === 54) $pos += 1;else $matchingFail(\"\\\"6\\\"\");\n\t\t\t\t\t\t\t\t\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$objs[$objsLen++] = \"MINOR_SIXTH\";\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tif ($pos === -1) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t$pos = pos0;\n\t\t\t\t\t\t\t\t\t\t\t\t\t$objsLen = objsLen0;\n\t\t\t\t\t\t\t\t\t\t\t\t\t$errorMask += 1;\n\t\t\t\t\t\t\t\t\t\t\t\t\tif ($input.substr($pos, 3) === \"maj\") $pos += 3;else $matchingFail(\"\\\"maj\\\"\");\n\t\t\t\t\t\t\t\t\t\t\t\t\t$errorMask -= 1;\n\t\t\t\t\t\t\t\t\t\t\t\t\tif ($pos === -1) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$objsLen = objsLen0;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$pos = pos0;\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$pos = -1;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trule$minor();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$objs[$objsLen++] = \"MINOR\";\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tif ($pos === -1) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$pos = pos0;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$objsLen = objsLen0;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trule$augument();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ($input.charCodeAt($pos) === 55) $pos += 1;else $matchingFail(\"\\\"7\\\"\");\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$objs[$objsLen++] = \"AUGUMENT_SEVENTH\";\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ($pos === -1) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$pos = pos0;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$objsLen = objsLen0;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trule$augument();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$objs[$objsLen++] = \"AUGUMENT\";\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ($pos === -1) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$pos = pos0;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$objsLen = objsLen0;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trule$diminish();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ($input.charCodeAt($pos) === 55) $pos += 1;else $matchingFail(\"\\\"7\\\"\");\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$objs[$objsLen++] = \"DIMINISH_SEVENTH\";\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ($pos === -1) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$pos = pos0;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$objsLen = objsLen0;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trule$half_diminish();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$objs[$objsLen++] = \"HALF_DIMINISH\";\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ($pos === -1) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$pos = pos0;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$objsLen = objsLen0;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trule$diminish();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$objs[$objsLen++] = \"DIMINISH\";\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ($pos === -1) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$pos = pos0;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$objsLen = objsLen0;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trule$major();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ($pos === -1) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$pos = pos0;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$objsLen = objsLen0;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$objs[$objsLen++] = \"MAJOR\";\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t$writeMemo(key, $pos !== -1 && $objs.slice(objsLen0, $objsLen));\n\t\t};\n\n\t\tfunction rule$tensions() {\n\t\t\tvar key = $pos * 18 + 3,\n\t\t\t    pos0 = $pos,\n\t\t\t    objsLen0 = $objsLen;\n\t\t\tif ($readMemo(key)) return;\n\t\t\trule$space();\n\t\t\tif ($pos !== -1) {\n\t\t\t\tif ($input.charCodeAt($pos) === 40) $pos += 1;else $matchingFail(\"\\\"(\\\"\");\n\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\trule$space();\n\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\tvar objsLen1 = $objsLen;\n\t\t\t\t\t\tvar pos1 = $pos,\n\t\t\t\t\t\t    objsLen2 = $objsLen;\n\t\t\t\t\t\tfor (var i0 = 0;; i0++) {\n\t\t\t\t\t\t\trule$tn_all();\n\t\t\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t\t\trule$delimiter();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t\t\tif ($pos === pos1) throw new Error(\"Infinite loop detected.\");\n\t\t\t\t\t\t\t\tpos1 = $pos;\n\t\t\t\t\t\t\t\tobjsLen2 = $objsLen;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$pos = pos1;\n\t\t\t\t\t\t$objsLen = objsLen2;\n\t\t\t\t\t\tif (i0 < 1) $pos = -1;\n\t\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t\t$objs[objsLen1] = $objs.slice(objsLen1, $objsLen);\n\t\t\t\t\t\t\t$objsLen = objsLen1 + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t\trule$space();\n\t\t\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t\t\tif ($input.charCodeAt($pos) === 41) $pos += 1;else $matchingFail(\"\\\")\\\"\");\n\t\t\t\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t\t\t\trule$space();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t$writeMemo(key, $pos !== -1 && $objs.slice(objsLen0, $objsLen));\n\t\t};\n\n\t\tfunction rule$bass() {\n\t\t\tvar key = $pos * 18 + 4,\n\t\t\t    pos0 = $pos,\n\t\t\t    objsLen0 = $objsLen;\n\t\t\tif ($readMemo(key)) return;\n\t\t\trule$slash();\n\t\t\tif ($pos !== -1) {\n\t\t\t\tvar objsLen1 = $objsLen;\n\t\t\t\trule$pitchClass();\n\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\tvar pos1 = $pos,\n\t\t\t\t\t    objsLen2 = $objsLen;\n\t\t\t\t\trule$accidental();\n\t\t\t\t\tif ($pos === -1) {\n\t\t\t\t\t\t$pos = pos1;\n\t\t\t\t\t\t$objsLen = objsLen2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t$objs[objsLen1] = $objs.slice(objsLen1, $objsLen);\n\t\t\t\t\t$objsLen = objsLen1 + 1;\n\t\t\t\t}\n\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t$objs[objsLen1] = mod$0($objs[objsLen1]);\n\t\t\t\t\t$objsLen = objsLen1 + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$writeMemo(key, $pos !== -1 && $objs.slice(objsLen0, $objsLen));\n\t\t};\n\n\t\tfunction rule$pitchClass() {\n\t\t\tvar key = $pos * 18 + 5,\n\t\t\t    pos0 = $pos,\n\t\t\t    objsLen0 = $objsLen;\n\t\t\tif ($readMemo(key)) return;\n\t\t\tvar c = $input.charCodeAt($pos);\n\t\t\tif (65 <= c && c <= 71) $pos += 1;else $matchingFail(\"[A-G]\");\n\t\t\tif ($pos !== -1) {\n\t\t\t\t$objs[$objsLen++] = $input.substring(pos0, $pos);\n\t\t\t}\n\t\t\t$writeMemo(key, $pos !== -1 && $objs.slice(objsLen0, $objsLen));\n\t\t};\n\n\t\tfunction rule$accidental() {\n\t\t\tvar key = $pos * 18 + 6,\n\t\t\t    pos0 = $pos,\n\t\t\t    objsLen0 = $objsLen;\n\t\t\tif ($readMemo(key)) return;\n\t\t\tif ($input.charCodeAt($pos) === 9839) $pos += 1;else $matchingFail(\"\\\"\\u266F\\\"\");\n\t\t\tif ($pos !== -1) {\n\t\t\t\t$objs[$objsLen++] = \"#\";\n\t\t\t}\n\t\t\tif ($pos === -1) {\n\t\t\t\t$pos = pos0;\n\t\t\t\t$objsLen = objsLen0;\n\t\t\t\tif ($input.charCodeAt($pos) === 65283) $pos += 1;else $matchingFail(\"\\\"\\uFF03\\\"\");\n\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t$objs[$objsLen++] = \"#\";\n\t\t\t\t}\n\t\t\t\tif ($pos === -1) {\n\t\t\t\t\t$pos = pos0;\n\t\t\t\t\t$objsLen = objsLen0;\n\t\t\t\t\tif ($input.charCodeAt($pos) === 35) $pos += 1;else $matchingFail(\"\\\"#\\\"\");\n\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t$objs[$objsLen++] = \"#\";\n\t\t\t\t\t}\n\t\t\t\t\tif ($pos === -1) {\n\t\t\t\t\t\t$pos = pos0;\n\t\t\t\t\t\t$objsLen = objsLen0;\n\t\t\t\t\t\tif ($input.charCodeAt($pos) === 9837) $pos += 1;else $matchingFail(\"\\\"\\u266D\\\"\");\n\t\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t\t$objs[$objsLen++] = \"b\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ($pos === -1) {\n\t\t\t\t\t\t\t$pos = pos0;\n\t\t\t\t\t\t\t$objsLen = objsLen0;\n\t\t\t\t\t\t\tif ($input.charCodeAt($pos) === 98) $pos += 1;else $matchingFail(\"\\\"b\\\"\");\n\t\t\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t\t\t$objs[$objsLen++] = \"b\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t$writeMemo(key, $pos !== -1 && $objs.slice(objsLen0, $objsLen));\n\t\t};\n\n\t\tfunction rule$major() {\n\t\t\tvar key = $pos * 18 + 7,\n\t\t\t    pos0 = $pos,\n\t\t\t    objsLen0 = $objsLen;\n\t\t\tif ($readMemo(key)) return;\n\t\t\tif ($input.charCodeAt($pos) === 77) $pos += 1;else $matchingFail(\"\\\"M\\\"\");\n\t\t\tif ($pos === -1) {\n\t\t\t\t$pos = pos0;\n\t\t\t\t$objsLen = objsLen0;\n\t\t\t\tif ($input.charCodeAt($pos) === 9651) $pos += 1;else $matchingFail(\"\\\"\\u25B3\\\"\");\n\t\t\t\tif ($pos === -1) {\n\t\t\t\t\t$pos = pos0;\n\t\t\t\t\t$objsLen = objsLen0;\n\t\t\t\t\tif ($input.substr($pos, 3) === \"maj\") $pos += 3;else $matchingFail(\"\\\"maj\\\"\");\n\t\t\t\t}\n\t\t\t}\n\t\t\t$writeMemo(key, $pos !== -1 && $objs.slice(objsLen0, $objsLen));\n\t\t};\n\n\t\tfunction rule$minor() {\n\t\t\tvar key = $pos * 18 + 8,\n\t\t\t    pos0 = $pos,\n\t\t\t    objsLen0 = $objsLen;\n\t\t\tif ($readMemo(key)) return;\n\t\t\tif ($input.substr($pos, 3) === \"min\") $pos += 3;else $matchingFail(\"\\\"min\\\"\");\n\t\t\tif ($pos === -1) {\n\t\t\t\t$pos = pos0;\n\t\t\t\t$objsLen = objsLen0;\n\t\t\t\tif ($input.charCodeAt($pos) === 109) $pos += 1;else $matchingFail(\"\\\"m\\\"\");\n\t\t\t\tif ($pos === -1) {\n\t\t\t\t\t$pos = pos0;\n\t\t\t\t\t$objsLen = objsLen0;\n\t\t\t\t\tif ($input.charCodeAt($pos) === 45) $pos += 1;else $matchingFail(\"\\\"-\\\"\");\n\t\t\t\t}\n\t\t\t}\n\t\t\t$writeMemo(key, $pos !== -1 && $objs.slice(objsLen0, $objsLen));\n\t\t};\n\n\t\tfunction rule$augument() {\n\t\t\tvar key = $pos * 18 + 9,\n\t\t\t    pos0 = $pos,\n\t\t\t    objsLen0 = $objsLen;\n\t\t\tif ($readMemo(key)) return;\n\t\t\tif ($input.substr($pos, 3) === \"aug\") $pos += 3;else $matchingFail(\"\\\"aug\\\"\");\n\t\t\tif ($pos === -1) {\n\t\t\t\t$pos = pos0;\n\t\t\t\t$objsLen = objsLen0;\n\t\t\t\tif ($input.charCodeAt($pos) === 43) $pos += 1;else $matchingFail(\"\\\"+\\\"\");\n\t\t\t}\n\t\t\t$writeMemo(key, $pos !== -1 && $objs.slice(objsLen0, $objsLen));\n\t\t};\n\n\t\tfunction rule$diminish() {\n\t\t\tvar key = $pos * 18 + 10,\n\t\t\t    pos0 = $pos,\n\t\t\t    objsLen0 = $objsLen;\n\t\t\tif ($readMemo(key)) return;\n\t\t\tif ($input.substr($pos, 3) === \"dim\") $pos += 3;else $matchingFail(\"\\\"dim\\\"\");\n\t\t\tif ($pos === -1) {\n\t\t\t\t$pos = pos0;\n\t\t\t\t$objsLen = objsLen0;\n\t\t\t\tif ($input.charCodeAt($pos) === 9675) $pos += 1;else $matchingFail(\"\\\"\\u25CB\\\"\");\n\t\t\t}\n\t\t\t$writeMemo(key, $pos !== -1 && $objs.slice(objsLen0, $objsLen));\n\t\t};\n\n\t\tfunction rule$half_diminish() {\n\t\t\tvar key = $pos * 18 + 11,\n\t\t\t    pos0 = $pos,\n\t\t\t    objsLen0 = $objsLen;\n\t\t\tif ($readMemo(key)) return;\n\t\t\tif ($input.charCodeAt($pos) === 966) $pos += 1;else $matchingFail(\"\\\"\\u03C6\\\"\");\n\t\t\t$writeMemo(key, $pos !== -1 && $objs.slice(objsLen0, $objsLen));\n\t\t};\n\n\t\tfunction rule$tn_all() {\n\t\t\tvar key = $pos * 18 + 12,\n\t\t\t    pos0 = $pos,\n\t\t\t    objsLen0 = $objsLen;\n\t\t\tif ($readMemo(key)) return;\n\t\t\trule$itv_flat();\n\t\t\tif ($pos !== -1) {\n\t\t\t\tif ($input.charCodeAt($pos) === 53) $pos += 1;else $matchingFail(\"\\\"5\\\"\");\n\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t$objs[$objsLen++] = \"b5\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($pos === -1) {\n\t\t\t\t$pos = pos0;\n\t\t\t\t$objsLen = objsLen0;\n\t\t\t\trule$itv_sharp();\n\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\tif ($input.charCodeAt($pos) === 53) $pos += 1;else $matchingFail(\"\\\"5\\\"\");\n\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t$objs[$objsLen++] = \"#5\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ($pos === -1) {\n\t\t\t\t\t$pos = pos0;\n\t\t\t\t\t$objsLen = objsLen0;\n\t\t\t\t\trule$itv_flat();\n\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\tif ($input.charCodeAt($pos) === 57) $pos += 1;else $matchingFail(\"\\\"9\\\"\");\n\t\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t\t$objs[$objsLen++] = \"b9\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ($pos === -1) {\n\t\t\t\t\t\t$pos = pos0;\n\t\t\t\t\t\t$objsLen = objsLen0;\n\t\t\t\t\t\tif ($input.charCodeAt($pos) === 57) $pos += 1;else $matchingFail(\"\\\"9\\\"\");\n\t\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t\t$objs[$objsLen++] = \"9\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ($pos === -1) {\n\t\t\t\t\t\t\t$pos = pos0;\n\t\t\t\t\t\t\t$objsLen = objsLen0;\n\t\t\t\t\t\t\trule$itv_sharp();\n\t\t\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t\t\tif ($input.charCodeAt($pos) === 57) $pos += 1;else $matchingFail(\"\\\"9\\\"\");\n\t\t\t\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t\t\t\t$objs[$objsLen++] = \"#9\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ($pos === -1) {\n\t\t\t\t\t\t\t\t$pos = pos0;\n\t\t\t\t\t\t\t\t$objsLen = objsLen0;\n\t\t\t\t\t\t\t\tif ($input.substr($pos, 2) === \"11\") $pos += 2;else $matchingFail(\"\\\"11\\\"\");\n\t\t\t\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t\t\t\t$objs[$objsLen++] = \"11\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif ($pos === -1) {\n\t\t\t\t\t\t\t\t\t$pos = pos0;\n\t\t\t\t\t\t\t\t\t$objsLen = objsLen0;\n\t\t\t\t\t\t\t\t\trule$itv_sharp();\n\t\t\t\t\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t\t\t\t\tif ($input.substr($pos, 2) === \"11\") $pos += 2;else $matchingFail(\"\\\"11\\\"\");\n\t\t\t\t\t\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t\t\t\t\t\t$objs[$objsLen++] = \"#11\";\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif ($pos === -1) {\n\t\t\t\t\t\t\t\t\t\t$pos = pos0;\n\t\t\t\t\t\t\t\t\t\t$objsLen = objsLen0;\n\t\t\t\t\t\t\t\t\t\trule$itv_flat();\n\t\t\t\t\t\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t\t\t\t\t\tif ($input.substr($pos, 2) === \"13\") $pos += 2;else $matchingFail(\"\\\"13\\\"\");\n\t\t\t\t\t\t\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t\t\t\t\t\t\t$objs[$objsLen++] = \"b13\";\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif ($pos === -1) {\n\t\t\t\t\t\t\t\t\t\t\t$pos = pos0;\n\t\t\t\t\t\t\t\t\t\t\t$objsLen = objsLen0;\n\t\t\t\t\t\t\t\t\t\t\tif ($input.substr($pos, 2) === \"13\") $pos += 2;else $matchingFail(\"\\\"13\\\"\");\n\t\t\t\t\t\t\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t\t\t\t\t\t\t$objs[$objsLen++] = \"13\";\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t$writeMemo(key, $pos !== -1 && $objs.slice(objsLen0, $objsLen));\n\t\t};\n\n\t\tfunction rule$itv_sharp() {\n\t\t\tvar key = $pos * 18 + 13,\n\t\t\t    pos0 = $pos,\n\t\t\t    objsLen0 = $objsLen;\n\t\t\tif ($readMemo(key)) return;\n\t\t\tif ($input.charCodeAt($pos) === 9839) $pos += 1;else $matchingFail(\"\\\"\\u266F\\\"\");\n\t\t\tif ($pos === -1) {\n\t\t\t\t$pos = pos0;\n\t\t\t\t$objsLen = objsLen0;\n\t\t\t\tif ($input.charCodeAt($pos) === 65283) $pos += 1;else $matchingFail(\"\\\"\\uFF03\\\"\");\n\t\t\t\tif ($pos === -1) {\n\t\t\t\t\t$pos = pos0;\n\t\t\t\t\t$objsLen = objsLen0;\n\t\t\t\t\tif ($input.charCodeAt($pos) === 35) $pos += 1;else $matchingFail(\"\\\"#\\\"\");\n\t\t\t\t\tif ($pos === -1) {\n\t\t\t\t\t\t$pos = pos0;\n\t\t\t\t\t\t$objsLen = objsLen0;\n\t\t\t\t\t\tif ($input.charCodeAt($pos) === 43) $pos += 1;else $matchingFail(\"\\\"+\\\"\");\n\t\t\t\t\t\tif ($pos === -1) {\n\t\t\t\t\t\t\t$pos = pos0;\n\t\t\t\t\t\t\t$objsLen = objsLen0;\n\t\t\t\t\t\t\tif ($input.charCodeAt($pos) === 65291) $pos += 1;else $matchingFail(\"\\\"\\uFF0B\\\"\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t$writeMemo(key, $pos !== -1 && $objs.slice(objsLen0, $objsLen));\n\t\t};\n\n\t\tfunction rule$itv_flat() {\n\t\t\tvar key = $pos * 18 + 14,\n\t\t\t    pos0 = $pos,\n\t\t\t    objsLen0 = $objsLen;\n\t\t\tif ($readMemo(key)) return;\n\t\t\tif ($input.charCodeAt($pos) === 9837) $pos += 1;else $matchingFail(\"\\\"\\u266D\\\"\");\n\t\t\tif ($pos === -1) {\n\t\t\t\t$pos = pos0;\n\t\t\t\t$objsLen = objsLen0;\n\t\t\t\tif ($input.charCodeAt($pos) === 98) $pos += 1;else $matchingFail(\"\\\"b\\\"\");\n\t\t\t\tif ($pos === -1) {\n\t\t\t\t\t$pos = pos0;\n\t\t\t\t\t$objsLen = objsLen0;\n\t\t\t\t\tif ($input.charCodeAt($pos) === 45) $pos += 1;else $matchingFail(\"\\\"-\\\"\");\n\t\t\t\t\tif ($pos === -1) {\n\t\t\t\t\t\t$pos = pos0;\n\t\t\t\t\t\t$objsLen = objsLen0;\n\t\t\t\t\t\tif ($input.charCodeAt($pos) === 8722) $pos += 1;else $matchingFail(\"\\\"\\u2212\\\"\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t$writeMemo(key, $pos !== -1 && $objs.slice(objsLen0, $objsLen));\n\t\t};\n\n\t\tfunction rule$delimiter() {\n\t\t\tvar key = $pos * 18 + 15,\n\t\t\t    pos0 = $pos,\n\t\t\t    objsLen0 = $objsLen;\n\t\t\tif ($readMemo(key)) return;\n\t\t\t$errorMask += 1;\n\t\t\tif ($input.charCodeAt($pos) === 41) $pos += 1;else $matchingFail(\"\\\")\\\"\");\n\t\t\t$errorMask -= 1;\n\t\t\tif ($pos !== -1) {\n\t\t\t\t$objsLen = objsLen0;\n\t\t\t\t$pos = pos0;\n\t\t\t}\n\t\t\tif ($pos === -1) {\n\t\t\t\t$pos = pos0;\n\t\t\t\t$objsLen = objsLen0;\n\t\t\t\trule$space();\n\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\tif ($input.charCodeAt($pos) === 44) $pos += 1;else $matchingFail(\"\\\",\\\"\");\n\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\trule$space();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ($pos === -1) {\n\t\t\t\t\t$pos = pos0;\n\t\t\t\t\t$objsLen = objsLen0;\n\t\t\t\t\tvar pos1 = $pos,\n\t\t\t\t\t    objsLen1 = $objsLen;\n\t\t\t\t\tfor (var i0 = 0;; i0++) {\n\t\t\t\t\t\tif ($input.charCodeAt($pos) === 32) $pos += 1;else $matchingFail(\"\\\" \\\"\");\n\t\t\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\t\t\tif ($pos === pos1) throw new Error(\"Infinite loop detected.\");\n\t\t\t\t\t\t\tpos1 = $pos;\n\t\t\t\t\t\t\tobjsLen1 = $objsLen;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$pos = pos1;\n\t\t\t\t\t$objsLen = objsLen1;\n\t\t\t\t\tif (i0 < 1) $pos = -1;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$writeMemo(key, $pos !== -1 && $objs.slice(objsLen0, $objsLen));\n\t\t};\n\n\t\tfunction rule$slash() {\n\t\t\tvar key = $pos * 18 + 16,\n\t\t\t    pos0 = $pos,\n\t\t\t    objsLen0 = $objsLen;\n\t\t\tif ($readMemo(key)) return;\n\t\t\trule$space();\n\t\t\tif ($pos !== -1) {\n\t\t\t\tvar pos1 = $pos,\n\t\t\t\t    objsLen1 = $objsLen;\n\t\t\t\tif ($input.charCodeAt($pos) === 47) $pos += 1;else $matchingFail(\"\\\"/\\\"\");\n\t\t\t\tif ($pos === -1) {\n\t\t\t\t\t$pos = pos1;\n\t\t\t\t\t$objsLen = objsLen1;\n\t\t\t\t\tif ($input.charCodeAt($pos) === 65295) $pos += 1;else $matchingFail(\"\\\"\\uFF0F\\\"\");\n\t\t\t\t\tif ($pos === -1) {\n\t\t\t\t\t\t$pos = pos1;\n\t\t\t\t\t\t$objsLen = objsLen1;\n\t\t\t\t\t\tif ($input.substr($pos, 2) === \"on\") $pos += 2;else $matchingFail(\"\\\"on\\\"\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\trule$space();\n\t\t\t\t}\n\t\t\t}\n\t\t\t$writeMemo(key, $pos !== -1 && $objs.slice(objsLen0, $objsLen));\n\t\t};\n\n\t\tfunction rule$space() {\n\t\t\tvar key = $pos * 18 + 17,\n\t\t\t    pos0 = $pos,\n\t\t\t    objsLen0 = $objsLen;\n\t\t\tif ($readMemo(key)) return;\n\t\t\tvar pos1 = $pos,\n\t\t\t    objsLen1 = $objsLen;\n\t\t\twhile (true) {\n\t\t\t\tif ($input.charCodeAt($pos) === 32) $pos += 1;else $matchingFail(\"\\\" \\\"\");\n\t\t\t\tif ($pos !== -1) {\n\t\t\t\t\tif ($pos === pos1) throw new Error(\"Infinite loop detected.\");\n\t\t\t\t\tpos1 = $pos;\n\t\t\t\t\tobjsLen1 = $objsLen;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$pos = pos1;\n\t\t\t$objsLen = objsLen1;\n\t\t\t$writeMemo(key, $pos !== -1 && $objs.slice(objsLen0, $objsLen));\n\t\t};\n\n\t\tfunction $matchingFail(match) {\n\t\t\tif ($errorMask === 0 && $failPos <= $pos) {\n\t\t\t\tmatch = $matchTable[$pos] ? $matchTable[$pos] : match;\n\t\t\t\tif ($failPos === $pos) {\n\t\t\t\t\tif ($failMatchs.indexOf(match) === -1) $failMatchs.push(match);\n\t\t\t\t} else {\n\t\t\t\t\t$failMatchs = [match];\n\t\t\t\t\t$failPos = $pos;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$pos = -1;\n\t\t}\n\n\t\tfunction $joinByOr(strs) {\n\t\t\tif (strs.length === 0) return \"\";\n\t\t\tif (strs.length === 1) return strs[0];\n\t\t\treturn strs.slice(0, strs.length - 1).join(\", \") + \" or \" + strs[strs.length - 1];\n\t\t};\n\n\t\tfunction $readMemo(key) {\n\t\t\tvar res = $memo[key];\n\t\t\tif (res !== undefined) {\n\t\t\t\tif (res !== $failureObj) {\n\t\t\t\t\t$pos = res.pos;\n\t\t\t\t\tfor (var i = 0, il = res.objs.length; i < il; ++i) {\n\t\t\t\t\t\t$objs[$objsLen++] = res.objs[i];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$pos = -1;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction $writeMemo(key, objs) {\n\t\t\t$memo[key] = objs ? {\n\t\t\t\tpos: $pos,\n\t\t\t\tobjs: objs\n\t\t\t} : $failureObj;\n\t\t}\n\n\t\trule$start();\n\t\tif ($pos !== -1) {\n\t\t\tif ($pos === $inputLength) {\n\t\t\t\t$objs.length = $objsLen;\n\t\t\t\treturn $objs[0];\n\t\t\t}\n\t\t\t$matchingFail(\"end of input\");\n\t\t}\n\t\tif ($failMatchs.length === 0) $failMatchs.push(\"something\");\n\t\tvar $line = ($input.slice(0, $failPos).match(/\\n/g) || []).length;\n\t\tvar $column = $failPos - $input.lastIndexOf(\"\\n\", $failPos - 1) - 1;\n\t\tvar $errorMessage = \"Line \" + ($line + 1) + \", column \" + $column + \": Expected \" + $joinByOr($failMatchs) + \" but \" + (JSON.stringify($input[$failPos]) || \"end of input\") + \" found.\";\n\t\tthrow new Error($errorMessage);\n\t};\n\treturn $parse;\n}();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5\n");

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _deepcopy = __webpack_require__(7);\n\nvar _deepcopy2 = _interopRequireDefault(_deepcopy);\n\nvar _pitchClass = __webpack_require__(14);\n\nvar _pitchClass2 = _interopRequireDefault(_pitchClass);\n\nvar _chordType = __webpack_require__(3);\n\nvar _chordType2 = _interopRequireDefault(_chordType);\n\nvar _interval = __webpack_require__(0);\n\nvar _interval2 = _interopRequireDefault(_interval);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction convertPitchClass(pitchClass) {\n  return _pitchClass2.default[pitchClass.replace('#', 'S').replace('b', 'F')];\n}\n\nfunction convertTensions(tensions) {\n  var tensionDict = {\n    'b5': 'd5',\n    '#5': 'A5',\n    'b9': 'm9',\n    '9': 'M9',\n    '#9': 'A9',\n    '11': 'P11',\n    '#11': 'A11',\n    'b13': 'm13',\n    '13': 'M13'\n  };\n  return tensions.map(function (tension) {\n    return _interval2.default[tensionDict[tension]];\n  });\n}\n\nfunction transformTypeAndTensions(type, tensions) {\n  var dstType = (0, _deepcopy2.default)(type);\n  var dstTensions = (0, _deepcopy2.default)(tensions);\n\n  if (tensions.some(function (tension) {\n    return tension.equals(_interval2.default.d5);\n  })) {\n    if (type.equals(_chordType2.default.MINOR_SEVENTH)) {\n      dstType = _chordType2.default.HALF_DIMINISH;\n      dstTensions = tensions.filter(function (tension) {\n        return !tension.equals(_interval2.default.d5);\n      });\n    } else if (type.equals(_chordType2.default.MINOR)) {\n      dstType = _chordType2.default.DIMINISH;\n      dstTensions = tensions.filter(function (tension) {\n        return !tension.equals(_interval2.default.d5);\n      });\n    }\n  } else if (tensions.some(function (tension) {\n    return tension.equals(_interval2.default.A5);\n  })) {\n    if (type.equals(_chordType2.default.SEVENTH)) {\n      dstType = _chordType2.default.AUGMENT_SEVENTH;\n      dstTensions = tensions.filter(function (tension) {\n        return !tension.equals(_interval2.default.A5);\n      });\n    } else if (type.equals(_chordType2.default.MAJOR)) {\n      dstType = _chordType2.default.AUGMENT;\n      dstTensions = tensions.filter(function (tension) {\n        return !tension.equals(_interval2.default.A5);\n      });\n    }\n  }\n\n  return {\n    type: dstType,\n    tensions: dstTensions\n  };\n}\n\nvar Chord = function () {\n  function Chord(root, type) {\n    var tensions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    var bass = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : root;\n\n    _classCallCheck(this, Chord);\n\n    this._root = convertPitchClass(root);\n    var r = transformTypeAndTensions(_chordType2.default[type], convertTensions(tensions));\n    this._type = r.type;\n    this._tensions = r.tensions;\n    this._bass = convertPitchClass(bass);\n  }\n\n  _createClass(Chord, [{\n    key: 'toNotes',\n    value: function toNotes() {\n      var _this = this;\n\n      return [this._bass._number - _interval2.default.P8.number].concat(_toConsumableArray(this._type.intervals.map(function (interval) {\n        return _this._root.number + interval.number;\n      })), _toConsumableArray(this._tensions.map(function (tension) {\n        return _this._root.number + tension.number;\n      }))).sort(function (a, b) {\n        return a - b;\n      });\n    }\n  }, {\n    key: 'toObj',\n    value: function toObj() {\n      return {\n        root: this._root.name,\n        type: this._type.name,\n        tensions: this._tensions.map(function (tension) {\n          return tension.name;\n        }),\n        bass: this._bass.name\n      };\n    }\n  }]);\n\n  return Chord;\n}();\n\nexports.default = Chord;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jaG9yZC5qcz82NzYwIl0sIm5hbWVzIjpbImNvbnZlcnRQaXRjaENsYXNzIiwicGl0Y2hDbGFzcyIsInJlcGxhY2UiLCJjb252ZXJ0VGVuc2lvbnMiLCJ0ZW5zaW9ucyIsInRlbnNpb25EaWN0IiwibWFwIiwidGVuc2lvbiIsInRyYW5zZm9ybVR5cGVBbmRUZW5zaW9ucyIsInR5cGUiLCJkc3RUeXBlIiwiZHN0VGVuc2lvbnMiLCJzb21lIiwiZXF1YWxzIiwiZDUiLCJNSU5PUl9TRVZFTlRIIiwiSEFMRl9ESU1JTklTSCIsImZpbHRlciIsIk1JTk9SIiwiRElNSU5JU0giLCJBNSIsIlNFVkVOVEgiLCJBVUdNRU5UX1NFVkVOVEgiLCJNQUpPUiIsIkFVR01FTlQiLCJDaG9yZCIsInJvb3QiLCJiYXNzIiwiX3Jvb3QiLCJyIiwiX3R5cGUiLCJfdGVuc2lvbnMiLCJfYmFzcyIsIl9udW1iZXIiLCJQOCIsIm51bWJlciIsImludGVydmFscyIsImludGVydmFsIiwic29ydCIsImEiLCJiIiwibmFtZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7Ozs7Ozs7OztBQUVBLFNBQVNBLGlCQUFULENBQTJCQyxVQUEzQixFQUF1QztBQUNyQyxTQUFPLHFCQUFXQSxXQUFXQyxPQUFYLENBQW1CLEdBQW5CLEVBQXdCLEdBQXhCLEVBQTZCQSxPQUE3QixDQUFxQyxHQUFyQyxFQUEwQyxHQUExQyxDQUFYLENBQVA7QUFDRDs7QUFFRCxTQUFTQyxlQUFULENBQXlCQyxRQUF6QixFQUFtQztBQUNqQyxNQUFNQyxjQUFjO0FBQ2xCLFVBQU0sSUFEWTtBQUVsQixVQUFNLElBRlk7QUFHbEIsVUFBTSxJQUhZO0FBSWxCLFNBQUssSUFKYTtBQUtsQixVQUFNLElBTFk7QUFNbEIsVUFBTSxLQU5ZO0FBT2xCLFdBQU8sS0FQVztBQVFsQixXQUFPLEtBUlc7QUFTbEIsVUFBTTtBQVRZLEdBQXBCO0FBV0EsU0FBT0Qs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QUFRNEIsTUFEUjtBQUFBLE9BQW5CLENBTEUsR0FRTEcsSUFSSyxDQVFBLFVBQUNDLENBQUQsRUFBSUMsQ0FBSjtBQUFBLGVBQVVELElBQUlDLENBQWQ7QUFBQSxPQVJBLENBQVA7QUFTRDs7OzRCQUVPO0FBQ04sYUFBTztBQUNMZCxjQUFNLEtBQUtFLEtBQUwsQ0FBV2EsSUFEWjtBQUVMaEMsY0FBTSxLQUFLcUIsS0FBTCxDQUFXVyxJQUZaO0FBR0xyQyxrQkFBVSxLQUFLMkIsU0FBTCxDQUFlekIsR0FBZixDQUFtQjtBQUFBLGlCQUFXQyxRQUFRa0MsSUFBbkI7QUFBQSxTQUFuQixDQUhMO0FBSUxkLGNBQU0sS0FBS0ssS0FBTCxDQUFXUztBQUpaLE9BQVA7QUFNRDs7Ozs7O2tCQS9Ca0JoQixLIiwiZmlsZSI6IjYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZGVlcGNvcHkgZnJvbSAnZGVlcGNvcHknO1xuaW1wb3J0IFBpdGNoQ2xhc3MgZnJvbSAnLi9waXRjaC1jbGFzcyc7XG5pbXBvcnQgQ2hvcmRUeXBlIGZyb20gJy4vY2hvcmQtdHlwZSc7XG5pbXBvcnQgSW50ZXJ2YWwgZnJvbSAnLi9pbnRlcnZhbCc7XG5cbmZ1bmN0aW9uIGNvbnZlcnRQaXRjaENsYXNzKHBpdGNoQ2xhc3MpIHtcbiAgcmV0dXJuIFBpdGNoQ2xhc3NbcGl0Y2hDbGFzcy5yZXBsYWNlKCcjJywgJ1MnKS5yZXBsYWNlKCdiJywgJ0YnKV07XG59XG5cbmZ1bmN0aW9uIGNvbnZlcnRUZW5zaW9ucyh0ZW5zaW9ucykge1xuICBjb25zdCB0ZW5zaW9uRGljdCA9IHtcbiAgICAnYjUnOiAnZDUnLFxuICAgICcjNSc6ICdBNScsXG4gICAgJ2I5JzogJ205JyxcbiAgICAnOSc6ICdNOScsXG4gICAgJyM5JzogJ0E5JyxcbiAgICAnMTEnOiAnUDExJyxcbiAgICAnIzExJzogJ0ExMScsXG4gICAgJ2IxMyc6ICdtMTMnLFxuICAgICcxMyc6ICdNMTMnXG4gIH07XG4gIHJldHVybiB0ZW5zaW9ucy5tYXAodGVuc2lvbiA9PiBJbnRlcnZhbFt0ZW5zaW9uRGljdFt0ZW5zaW9uXV0pO1xufVxuXG5mdW5jdGlvbiB0cmFuc2Zvcm1UeXBlQW5kVGVuc2lvbnModHlwZSwgdGVuc2lvbnMpIHtcbiAgbGV0IGRzdFR5cGUgPSBkZWVwY29weSh0eXBlKTtcbiAgbGV0IGRzdFRlbnNpb25zID0gZGVlcGNvcHkodGVuc2lvbnMpO1xuXG4gIGlmICh0ZW5zaW9ucy5zb21lKHRlbnNpb24gPT4gdGVuc2lvbi5lcXVhbHMoSW50ZXJ2YWwuZDUpKSkge1xuICAgIGlmICh0eXBlLmVxdWFscyhDaG9yZFR5cGUuTUlOT1JfU0VWRU5USCkpIHtcbiAgICAgIGRzdFR5cGUgPSBDaG9yZFR5cGUuSEFMRl9ESU1JTklTSDtcbiAgICAgIGRzdFRlbnNpb25zID0gdGVuc2lvbnMuZmlsdGVyKHRlbnNpb24gPT4gIXRlbnNpb24uZXF1YWxzKEludGVydmFsLmQ1KSk7XG4gICAgfSBlbHNlIGlmICh0eXBlLmVxdWFscyhDaG9yZFR5cGUuTUlOT1IpKSB7XG4gICAgICBkc3RUeXBlID0gQ2hvcmRUeXBlLkRJTUlOSVNIO1xuICAgICAgZHN0VGVuc2lvbnMgPSB0ZW5zaW9ucy5maWx0ZXIodGVuc2lvbiA9PiAhdGVuc2lvbi5lcXVhbHMoSW50ZXJ2YWwuZDUpKTtcbiAgICB9XG4gIH0gZWxzZSBpZiAodGVuc2lvbnMuc29tZSh0ZW5zaW9uID0+IHRlbnNpb24uZXF1YWxzKEludGVydmFsLkE1KSkpIHtcbiAgICBpZiAodHlwZS5lcXVhbHMoQ2hvcmRUeXBlLlNFVkVOVEgpKSB7XG4gICAgICBkc3RUeXBlID0gQ2hvcmRUeXBlLkFVR01FTlRfU0VWRU5USDtcbiAgICAgIGRzdFRlbnNpb25zID0gdGVuc2lvbnMuZmlsdGVyKHRlbnNpb24gPT4gIXRlbnNpb24uZXF1YWxzKEludGVydmFsLkE1KSk7XG4gICAgfSBlbHNlIGlmICh0eXBlLmVxdWFscyhDaG9yZFR5cGUuTUFKT1IpKSB7XG4gICAgICBkc3RUeXBlID0gQ2hvcmRUeXBlLkFVR01FTlQ7XG4gICAgICBkc3RUZW5zaW9ucyA9IHRlbnNpb25zLmZpbHRlcih0ZW5zaW9uID0+ICF0ZW5zaW9uLmVxdWFscyhJbnRlcnZhbC5BNSkpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB7XG4gICAgdHlwZTogZHN0VHlwZSxcbiAgICB0ZW5zaW9uczogZHN0VGVuc2lvbnNcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2hvcmQge1xuICBjb25zdHJ1Y3Rvcihyb290LCB0eXBlLCB0ZW5zaW9ucyA9IFtdLCBiYXNzID0gcm9vdCkge1xuICAgIHRoaXMuX3Jvb3QgPSBjb252ZXJ0UGl0Y2hDbGFzcyhyb290KTtcbiAgICBjb25zdCByID0gdHJhbnNmb3JtVHlwZUFuZFRlbnNpb25zKFxuICAgICAgQ2hvcmRUeXBlW3R5cGVdLFxuICAgICAgY29udmVydFRlbnNpb25zKHRlbnNpb25zKVxuICAgICk7XG4gICAgdGhpcy5fdHlwZSA9IHIudHlwZTtcbiAgICB0aGlzLl90ZW5zaW9ucyA9IHIudGVuc2lvbnM7XG4gICAgdGhpcy5fYmFzcyA9IGNvbnZlcnRQaXRjaENsYXNzKGJhc3MpO1xuICB9XG5cbiAgdG9Ob3RlcygpIHtcbiAgICByZXR1cm4gW1xuICAgICAgdGhpcy5fYmFzcy5fbnVtYmVyIC0gSW50ZXJ2YWwuUDgubnVtYmVyLFxuICAgICAgLi4udGhpcy5fdHlwZS5pbnRlcnZhbHMubWFwKGludGVydmFsID0+XG4gICAgICAgIHRoaXMuX3Jvb3QubnVtYmVyICsgaW50ZXJ2YWwubnVtYmVyXG4gICAgICApLFxuICAgICAgLi4udGhpcy5fdGVuc2lvbnMubWFwKHRlbnNpb24gPT5cbiAgICAgICAgdGhpcy5fcm9vdC5udW1iZXIgKyB0ZW5zaW9uLm51bWJlclxuICAgICAgKVxuICAgIF0uc29ydCgoYSwgYikgPT4gYSAtIGIpO1xuICB9XG5cbiAgdG9PYmooKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHJvb3Q6IHRoaXMuX3Jvb3QubmFtZSxcbiAgICAgIHR5cGU6IHRoaXMuX3R5cGUubmFtZSxcbiAgICAgIHRlbnNpb25zOiB0aGlzLl90ZW5zaW9ucy5tYXAodGVuc2lvbiA9PiB0ZW5zaW9uLm5hbWUpLFxuICAgICAgYmFzczogdGhpcy5fYmFzcy5uYW1lXG4gICAgfTtcbiAgfVxufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vY2hvcmQuanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///6\n");

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(8);\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2RlZXBjb3B5L2luZGV4LmpzP2U4ODEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiNy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9saWInKTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL25vZGVfbW9kdWxlcy9kZWVwY29weS9pbmRleC5qc1xuLy8gbW9kdWxlIGlkID0gN1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///7\n");

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.__esModule = true;\n\nvar _copy = __webpack_require__(9);\n\nvar _polyfill = __webpack_require__(2);\n\nfunction defaultCustomizer(target) {\n  return void 0;\n}\n\nfunction deepcopy(target) {\n  var customizer = arguments.length <= 1 || arguments[1] === void 0 ? defaultCustomizer : arguments[1];\n\n  if (target === null) {\n    // copy null\n    return null;\n  }\n\n  var resultValue = (0, _copy.copyValue)(target);\n\n  if (resultValue !== null) {\n    // copy some primitive types\n    return resultValue;\n  }\n\n  var resultCollection = (0, _copy.copyCollection)(target, customizer),\n      clone = resultCollection !== null ? resultCollection : target;\n\n  var visited = [target],\n      reference = [clone];\n\n  // recursively copy from collection\n  return recursiveCopy(target, customizer, clone, visited, reference);\n}\n\nfunction recursiveCopy(target, customizer, clone, visited, reference) {\n  if (target === null) {\n    // copy null\n    return null;\n  }\n\n  var resultValue = (0, _copy.copyValue)(target);\n\n  if (resultValue !== null) {\n    // copy some primitive types\n    return resultValue;\n  }\n\n  var keys = (0, _polyfill.getKeys)(target).concat((0, _polyfill.getSymbols)(target));\n\n  var i = void 0,\n      len = void 0;\n\n  var key = void 0,\n      value = void 0,\n      index = void 0,\n      resultCopy = void 0,\n      result = void 0,\n      ref = void 0;\n\n  for (i = 0, len = keys.length; i < len; ++i) {\n    key = keys[i];\n    value = target[key];\n    index = (0, _polyfill.indexOf)(visited, value);\n\n    resultCopy = void 0;\n    result = void 0;\n    ref = void 0;\n\n    if (index === -1) {\n      resultCopy = (0, _copy.copy)(value, customizer);\n      result = resultCopy !== null ? resultCopy : value;\n\n      if (value !== null && /^(?:function|object)$/.test(typeof value)) {\n        visited.push(value);\n        reference.push(result);\n      }\n    } else {\n      // circular reference\n      ref = reference[index];\n    }\n\n    clone[key] = ref || recursiveCopy(value, customizer, result, visited, reference);\n  }\n\n  return clone;\n}\n\nexports['default'] = deepcopy;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2RlZXBjb3B5L2xpYi9pbmRleC5qcz9jZmU1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxnQ0FBZ0MsU0FBUztBQUN6QztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EiLCJmaWxlIjoiOC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxudmFyIF9jb3B5ID0gcmVxdWlyZSgnLi9jb3B5Jyk7XG5cbnZhciBfcG9seWZpbGwgPSByZXF1aXJlKCcuL3BvbHlmaWxsJyk7XG5cbmZ1bmN0aW9uIGRlZmF1bHRDdXN0b21pemVyKHRhcmdldCkge1xuICByZXR1cm4gdm9pZCAwO1xufVxuXG5mdW5jdGlvbiBkZWVwY29weSh0YXJnZXQpIHtcbiAgdmFyIGN1c3RvbWl6ZXIgPSBhcmd1bWVudHMubGVuZ3RoIDw9IDEgfHwgYXJndW1lbnRzWzFdID09PSB2b2lkIDAgPyBkZWZhdWx0Q3VzdG9taXplciA6IGFyZ3VtZW50c1sxXTtcblxuICBpZiAodGFyZ2V0ID09PSBudWxsKSB7XG4gICAgLy8gY29weSBudWxsXG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICB2YXIgcmVzdWx0VmFsdWUgPSAoMCwgX2NvcHkuY29weVZhbHVlKSh0YXJnZXQpO1xuXG4gIGlmIChyZXN1bHRWYWx1ZSAhPT0gbnVsbCkge1xuICAgIC8vIGNvcHkgc29tZSBwcmltaXRpdmUgdHlwZXNcbiAgICByZXR1cm4gcmVzdWx0VmFsdWU7XG4gIH1cblxuICB2YXIgcmVzdWx0Q29sbGVjdGlvbiA9ICgwLCBfY29weS5jb3B5Q29sbGVjdGlvbikodGFyZ2V0LCBjdXN0b21pemVyKSxcbiAgICAgIGNsb25lID0gcmVzdWx0Q29sbGVjdGlvbiAhPT0gbnVsbCA/IHJlc3VsdENvbGxlY3Rpb24gOiB0YXJnZXQ7XG5cbiAgdmFyIHZpc2l0ZWQgPSBbdGFyZ2V0XSxcbiAgICAgIHJlZmVyZW5jZSA9IFtjbG9uZV07XG5cbiAgLy8gcmVjdXJzaXZlbHkgY29weSBmcm9tIGNvbGxlY3Rpb25cbiAgcmV0dXJuIHJlY3Vyc2l2ZUNvcHkodGFyZ2V0LCBjdXN0b21pemVyLCBjbG9uZSwgdmlzaXRlZCwgcmVmZXJlbmNlKTtcbn1cblxuZnVuY3Rpb24gcmVjdXJzaXZlQ29weSh0YXJnZXQsIGN1c3RvbWl6ZXIsIGNsb25lLCB2aXNpdGVkLCByZWZlcmVuY2UpIHtcbiAgaWYgKHRhcmdldCA9PT0gbnVsbCkge1xuICAgIC8vIGNvcHkgbnVsbFxuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgdmFyIHJlc3VsdFZhbHVlID0gKDAsIF9jb3B5LmNvcHlWYWx1ZSkodGFyZ2V0KTtcblxuICBpZiAocmVzdWx0VmFsdWUgIT09IG51bGwpIHtcbiAgICAvLyBjb3B5IHNvbWUgcHJpbWl0aXZlIHR5cGVzXG4gICAgcmV0dXJuIHJlc3VsdFZhbHVlO1xuICB9XG5cbiAgdmFyIGtleXMgPSAoMCwgX3BvbHlmaWxsLmdldEtleXMpKHRhcmdldCkuY29uY2F0KCgwLCBfcG9seWZpbGwuZ2V0U3ltYm9scykodGFyZ2V0KSk7XG5cbiAgdmFyIGkgPSB2b2lkIDAsXG4gICAgICBsZW4gPSB2b2lkIDA7XG5cbiAgdmFyIGtleSA9IHZvaWQgMCxcbiAgICAgIHZhbHVlID0gdm9pZCAwLFxuICAgICAgaW5kZXggPSB2b2lkIDAsXG4gICAgICByZXN1bHRDb3B5ID0gdm9pZCAwLFxuICAgICAgcmVzdWx0ID0gdm9pZCAwLFxuICAgICAgcmVmID0gdm9pZCAwO1xuXG4gIGZvciAoaSA9IDAsIGxlbiA9IGtleXMubGVuZ3RoOyBpIDwgbGVuOyArK2kpIHtcbiAgICBrZXkgPSBrZXlzW2ldO1xuICAgIHZhbHVlID0gdGFyZ2V0W2tleV07XG4gICAgaW5kZXggPSAoMCwgX3BvbHlmaWxsLmluZGV4T2YpKHZpc2l0ZWQsIHZhbHVlKTtcblxuICAgIHJlc3VsdENvcHkgPSB2b2lkIDA7XG4gICAgcmVzdWx0ID0gdm9pZCAwO1xuICAgIHJlZiA9IHZvaWQgMDtcblxuICAgIGlmIChpbmRleCA9PT0gLTEpIHtcbiAgICAgIHJlc3VsdENvcHkgPSAoMCwgX2NvcHkuY29weSkodmFsdWUsIGN1c3RvbWl6ZXIpO1xuICAgICAgcmVzdWx0ID0gcmVzdWx0Q29weSAhPT0gbnVsbCA/IHJlc3VsdENvcHkgOiB2YWx1ZTtcblxuICAgICAgaWYgKHZhbHVlICE9PSBudWxsICYmIC9eKD86ZnVuY3Rpb258b2JqZWN0KSQvLnRlc3QodHlwZW9mIHZhbHVlKSkge1xuICAgICAgICB2aXNpdGVkLnB1c2godmFsdWUpO1xuICAgICAgICByZWZlcmVuY2UucHVzaChyZXN1bHQpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBjaXJjdWxhciByZWZlcmVuY2VcbiAgICAgIHJlZiA9IHJlZmVyZW5jZVtpbmRleF07XG4gICAgfVxuXG4gICAgY2xvbmVba2V5XSA9IHJlZiB8fCByZWN1cnNpdmVDb3B5KHZhbHVlLCBjdXN0b21pemVyLCByZXN1bHQsIHZpc2l0ZWQsIHJlZmVyZW5jZSk7XG4gIH1cblxuICByZXR1cm4gY2xvbmU7XG59XG5cbmV4cG9ydHNbJ2RlZmF1bHQnXSA9IGRlZXBjb3B5O1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vbm9kZV9tb2R1bGVzL2RlZXBjb3B5L2xpYi9pbmRleC5qc1xuLy8gbW9kdWxlIGlkID0gOFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///8\n");

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\n\nexports.__esModule = true;\nexports.copyValue = exports.copyCollection = exports.copy = void 0;\n\nvar _polyfill = __webpack_require__(2);\n\nvar toString = Object.prototype.toString;\n\nfunction copy(target, customizer) {\n  var resultValue = copyValue(target);\n\n  if (resultValue !== null) {\n    return resultValue;\n  }\n\n  return copyCollection(target, customizer);\n}\n\nfunction copyCollection(target, customizer) {\n  if (typeof customizer !== 'function') {\n    throw new TypeError('customizer is must be a Function');\n  }\n\n  if (typeof target === 'function') {\n    var source = String(target);\n\n    // NOTE:\n    //\n    //   https://gist.github.com/jdalton/5e34d890105aca44399f\n    //\n    //   - https://gist.github.com/jdalton/5e34d890105aca44399f#gistcomment-1283831\n    //   - http://es5.github.io/#x15\n    //\n    //   native functions does not have prototype:\n    //\n    //       Object.toString.prototype  // => undefined\n    //       (function() {}).prototype  // => {}\n    //\n    //   but cannot detect native constructor:\n    //\n    //       typeof Object     // => 'function'\n    //       Object.prototype  // => {}\n    //\n    //   and cannot detect null binded function:\n    //\n    //       String(Math.abs)\n    //         // => 'function abs() { [native code] }'\n    //\n    //     Firefox, Safari:\n    //       String((function abs() {}).bind(null))\n    //         // => 'function abs() { [native code] }'\n    //\n    //     Chrome:\n    //       String((function abs() {}).bind(null))\n    //         // => 'function () { [native code] }'\n    if (/^\\s*function\\s*\\S*\\([^\\)]*\\)\\s*{\\s*\\[native code\\]\\s*}/.test(source)) {\n      // native function\n      return target;\n    } else {\n      // user defined function\n      return new Function('return ' + String(source))();\n    }\n  }\n\n  var targetClass = toString.call(target);\n\n  if (targetClass === '[object Array]') {\n    return [];\n  }\n\n  if (targetClass === '[object Object]' && target.constructor === Object) {\n    return {};\n  }\n\n  if (targetClass === '[object Date]') {\n    // NOTE:\n    //\n    //   Firefox need to convert\n    //\n    //   Firefox:\n    //     var date = new Date;\n    //     +date;            // 1420909365967\n    //     +new Date(date);  // 1420909365000\n    //     +new Date(+date); // 1420909365967\n    //\n    //   Chrome:\n    //     var date = new Date;\n    //     +date;            // 1420909757913\n    //     +new Date(date);  // 1420909757913\n    //     +new Date(+date); // 1420909757913\n    return new Date(target.getTime());\n  }\n\n  if (targetClass === '[object RegExp]') {\n    // NOTE:\n    //\n    //   Chrome, Safari:\n    //     (new RegExp).source => \"(?:)\"\n    //\n    //   Firefox:\n    //     (new RegExp).source => \"\"\n    //\n    //   Chrome, Safari, Firefox:\n    //     String(new RegExp) => \"/(?:)/\"\n    var regexpText = String(target),\n        slashIndex = regexpText.lastIndexOf('/');\n\n    return new RegExp(regexpText.slice(1, slashIndex), regexpText.slice(slashIndex + 1));\n  }\n\n  if ((0, _polyfill.isBuffer)(target)) {\n    var buffer = new Buffer(target.length);\n\n    target.copy(buffer);\n\n    return buffer;\n  }\n\n  var customizerResult = customizer(target);\n\n  if (customizerResult !== void 0) {\n    return customizerResult;\n  }\n\n  return null;\n}\n\nfunction copyValue(target) {\n  var targetType = typeof target;\n\n  // copy String, Number, Boolean, undefined and Symbol\n  // without null and Function\n  if (target !== null && targetType !== 'object' && targetType !== 'function') {\n    return target;\n  }\n\n  return null;\n}\n\nexports.copy = copy;\nexports.copyCollection = copyCollection;\nexports.copyValue = copyValue;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1).Buffer))\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2RlZXBjb3B5L2xpYi9jb3B5LmpzPzhjZjgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjhDQUFBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxnQkFBZ0I7QUFDdEQ7QUFDQTtBQUNBLHNDQUFzQztBQUN0QyxzQ0FBc0MsZ0JBQWdCO0FBQ3REO0FBQ0E7QUFDQSxzQ0FBc0M7QUFDdEMsbUNBQW1DLGdCQUFnQjtBQUNuRCx5Q0FBeUMsc0JBQXNCO0FBQy9EO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQiwyQkFBMkI7QUFDM0IsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQiwyQkFBMkI7QUFDM0IsNEJBQTRCO0FBQzVCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDhCIiwiZmlsZSI6IjkuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmNvcHlWYWx1ZSA9IGV4cG9ydHMuY29weUNvbGxlY3Rpb24gPSBleHBvcnRzLmNvcHkgPSB2b2lkIDA7XG5cbnZhciBfcG9seWZpbGwgPSByZXF1aXJlKCcuL3BvbHlmaWxsJyk7XG5cbnZhciB0b1N0cmluZyA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmc7XG5cbmZ1bmN0aW9uIGNvcHkodGFyZ2V0LCBjdXN0b21pemVyKSB7XG4gIHZhciByZXN1bHRWYWx1ZSA9IGNvcHlWYWx1ZSh0YXJnZXQpO1xuXG4gIGlmIChyZXN1bHRWYWx1ZSAhPT0gbnVsbCkge1xuICAgIHJldHVybiByZXN1bHRWYWx1ZTtcbiAgfVxuXG4gIHJldHVybiBjb3B5Q29sbGVjdGlvbih0YXJnZXQsIGN1c3RvbWl6ZXIpO1xufVxuXG5mdW5jdGlvbiBjb3B5Q29sbGVjdGlvbih0YXJnZXQsIGN1c3RvbWl6ZXIpIHtcbiAgaWYgKHR5cGVvZiBjdXN0b21pemVyICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignY3VzdG9taXplciBpcyBtdXN0IGJlIGEgRnVuY3Rpb24nKTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgdGFyZ2V0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgdmFyIHNvdXJjZSA9IFN0cmluZyh0YXJnZXQpO1xuXG4gICAgLy8gTk9URTpcbiAgICAvL1xuICAgIC8vICAgaHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vamRhbHRvbi81ZTM0ZDg5MDEwNWFjYTQ0Mzk5ZlxuICAgIC8vXG4gICAgLy8gICAtIGh0dHBzOi8vZ2lzdC5naXRodWIuY29tL2pkYWx0b24vNWUzNGQ4OTAxMDVhY2E0NDM5OWYjZ2lzdGNvbW1lbnQtMTI4MzgzMVxuICAgIC8vICAgLSBodHRwOi8vZXM1LmdpdGh1Yi5pby8jeDE1XG4gICAgLy9cbiAgICAvLyAgIG5hdGl2ZSBmdW5jdGlvbnMgZG9lcyBub3QgaGF2ZSBwcm90b3R5cGU6XG4gICAgLy9cbiAgICAvLyAgICAgICBPYmplY3QudG9TdHJpbmcucHJvdG90eXBlICAvLyA9PiB1bmRlZmluZWRcbiAgICAvLyAgICAgICAoZnVuY3Rpb24oKSB7fSkucHJvdG90eXBlICAvLyA9PiB7fVxuICAgIC8vXG4gICAgLy8gICBidXQgY2Fubm90IGRldGVjdCBuYXRpdmUgY29uc3RydWN0b3I6XG4gICAgLy9cbiAgICAvLyAgICAgICB0eXBlb2YgT2JqZWN0ICAgICAvLyA9PiAnZnVuY3Rpb24nXG4gICAgLy8gICAgICAgT2JqZWN0LnByb3RvdHlwZSAgLy8gPT4ge31cbiAgICAvL1xuICAgIC8vICAgYW5kIGNhbm5vdCBkZXRlY3QgbnVsbCBiaW5kZWQgZnVuY3Rpb246XG4gICAgLy9cbiAgICAvLyAgICAgICBTdHJpbmcoTWF0aC5hYnMpXG4gICAgLy8gICAgICAgICAvLyA9PiAnZnVuY3Rpb24gYWJzKCkgeyBbbmF0aXZlIGNvZGVdIH0nXG4gICAgLy9cbiAgICAvLyAgICAgRmlyZWZveCwgU2FmYXJpOlxuICAgIC8vICAgICAgIFN0cmluZygoZnVuY3Rpb24gYWJzKCkge30pLmJpbmQobnVsbCkpXG4gICAgLy8gICAgICAgICAvLyA9PiAnZnVuY3Rpb24gYWJzKCkgeyBbbmF0aXZlIGNvZGVdIH0nXG4gICAgLy9cbiAgICAvLyAgICAgQ2hyb21lOlxuICAgIC8vICAgICAgIFN0cmluZygoZnVuY3Rpb24gYWJzKCkge30pLmJpbmQobnVsbCkpXG4gICAgLy8gICAgICAgICAvLyA9PiAnZnVuY3Rpb24gKCkgeyBbbmF0aXZlIGNvZGVdIH0nXG4gICAgaWYgKC9eXFxzKmZ1bmN0aW9uXFxzKlxcUypcXChbXlxcKV0qXFwpXFxzKntcXHMqXFxbbmF0aXZlIGNvZGVcXF1cXHMqfS8udGVzdChzb3VyY2UpKSB7XG4gICAgICAvLyBuYXRpdmUgZnVuY3Rpb25cbiAgICAgIHJldHVybiB0YXJnZXQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIHVzZXIgZGVmaW5lZCBmdW5jdGlvblxuICAgICAgcmV0dXJuIG5ldyBGdW5jdGlvbigncmV0dXJuICcgKyBTdHJpbmcoc291cmNlKSkoKTtcbiAgICB9XG4gIH1cblxuICB2YXIgdGFyZ2V0Q2xhc3MgPSB0b1N0cmluZy5jYWxsKHRhcmdldCk7XG5cbiAgaWYgKHRhcmdldENsYXNzID09PSAnW29iamVjdCBBcnJheV0nKSB7XG4gICAgcmV0dXJuIFtdO1xuICB9XG5cbiAgaWYgKHRhcmdldENsYXNzID09PSAnW29iamVjdCBPYmplY3RdJyAmJiB0YXJnZXQuY29uc3RydWN0b3IgPT09IE9iamVjdCkge1xuICAgIHJldHVybiB7fTtcbiAgfVxuXG4gIGlmICh0YXJnZXRDbGFzcyA9PT0gJ1tvYmplY3QgRGF0ZV0nKSB7XG4gICAgLy8gTk9URTpcbiAgICAvL1xuICAgIC8vICAgRmlyZWZveCBuZWVkIHRvIGNvbnZlcnRcbiAgICAvL1xuICAgIC8vICAgRmlyZWZveDpcbiAgICAvLyAgICAgdmFyIGRhdGUgPSBuZXcgRGF0ZTtcbiAgICAvLyAgICAgK2RhdGU7ICAgICAgICAgICAgLy8gMTQyMDkwOTM2NTk2N1xuICAgIC8vICAgICArbmV3IERhdGUoZGF0ZSk7ICAvLyAxNDIwOTA5MzY1MDAwXG4gICAgLy8gICAgICtuZXcgRGF0ZSgrZGF0ZSk7IC8vIDE0MjA5MDkzNjU5NjdcbiAgICAvL1xuICAgIC8vICAgQ2hyb21lOlxuICAgIC8vICAgICB2YXIgZGF0ZSA9IG5ldyBEYXRlO1xuICAgIC8vICAgICArZGF0ZTsgICAgICAgICAgICAvLyAxNDIwOTA5NzU3OTEzXG4gICAgLy8gICAgICtuZXcgRGF0ZShkYXRlKTsgIC8vIDE0MjA5MDk3NTc5MTNcbiAgICAvLyAgICAgK25ldyBEYXRlKCtkYXRlKTsgLy8gMTQyMDkwOTc1NzkxM1xuICAgIHJldHVybiBuZXcgRGF0ZSh0YXJnZXQuZ2V0VGltZSgpKTtcbiAgfVxuXG4gIGlmICh0YXJnZXRDbGFzcyA9PT0gJ1tvYmplY3QgUmVnRXhwXScpIHtcbiAgICAvLyBOT1RFOlxuICAgIC8vXG4gICAgLy8gICBDaHJvbWUsIFNhZmFyaTpcbiAgICAvLyAgICAgKG5ldyBSZWdFeHApLnNvdXJjZSA9PiBcIig/OilcIlxuICAgIC8vXG4gICAgLy8gICBGaXJlZm94OlxuICAgIC8vICAgICAobmV3IFJlZ0V4cCkuc291cmNlID0+IFwiXCJcbiAgICAvL1xuICAgIC8vICAgQ2hyb21lLCBTYWZhcmksIEZpcmVmb3g6XG4gICAgLy8gICAgIFN0cmluZyhuZXcgUmVnRXhwKSA9PiBcIi8oPzopL1wiXG4gICAgdmFyIHJlZ2V4cFRleHQgPSBTdHJpbmcodGFyZ2V0KSxcbiAgICAgICAgc2xhc2hJbmRleCA9IHJlZ2V4cFRleHQubGFzdEluZGV4T2YoJy8nKTtcblxuICAgIHJldHVybiBuZXcgUmVnRXhwKHJlZ2V4cFRleHQuc2xpY2UoMSwgc2xhc2hJbmRleCksIHJlZ2V4cFRleHQuc2xpY2Uoc2xhc2hJbmRleCArIDEpKTtcbiAgfVxuXG4gIGlmICgoMCwgX3BvbHlmaWxsLmlzQnVmZmVyKSh0YXJnZXQpKSB7XG4gICAgdmFyIGJ1ZmZlciA9IG5ldyBCdWZmZXIodGFyZ2V0Lmxlbmd0aCk7XG5cbiAgICB0YXJnZXQuY29weShidWZmZXIpO1xuXG4gICAgcmV0dXJuIGJ1ZmZlcjtcbiAgfVxuXG4gIHZhciBjdXN0b21pemVyUmVzdWx0ID0gY3VzdG9taXplcih0YXJnZXQpO1xuXG4gIGlmIChjdXN0b21pemVyUmVzdWx0ICE9PSB2b2lkIDApIHtcbiAgICByZXR1cm4gY3VzdG9taXplclJlc3VsdDtcbiAgfVxuXG4gIHJldHVybiBudWxsO1xufVxuXG5mdW5jdGlvbiBjb3B5VmFsdWUodGFyZ2V0KSB7XG4gIHZhciB0YXJnZXRUeXBlID0gdHlwZW9mIHRhcmdldDtcblxuICAvLyBjb3B5IFN0cmluZywgTnVtYmVyLCBCb29sZWFuLCB1bmRlZmluZWQgYW5kIFN5bWJvbFxuICAvLyB3aXRob3V0IG51bGwgYW5kIEZ1bmN0aW9uXG4gIGlmICh0YXJnZXQgIT09IG51bGwgJiYgdGFyZ2V0VHlwZSAhPT0gJ29iamVjdCcgJiYgdGFyZ2V0VHlwZSAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiB0YXJnZXQ7XG4gIH1cblxuICByZXR1cm4gbnVsbDtcbn1cblxuZXhwb3J0cy5jb3B5ID0gY29weTtcbmV4cG9ydHMuY29weUNvbGxlY3Rpb24gPSBjb3B5Q29sbGVjdGlvbjtcbmV4cG9ydHMuY29weVZhbHVlID0gY29weVZhbHVlO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL25vZGVfbW9kdWxlcy9kZWVwY29weS9saWIvY29weS5qc1xuLy8gbW9kdWxlIGlkID0gOVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///9\n");

/***/ }),
/* 10 */
/***/ (function(module, exports) {

eval("var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3dlYnBhY2svYnVpbGRpbi9nbG9iYWwuanM/ODdhNiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsNENBQTRDOztBQUU1QyIsImZpbGUiOiIxMC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBnO1xyXG5cclxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcclxuZyA9IChmdW5jdGlvbigpIHtcclxuXHRyZXR1cm4gdGhpcztcclxufSkoKTtcclxuXHJcbnRyeSB7XHJcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXHJcblx0ZyA9IGcgfHwgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpIHx8ICgxLGV2YWwpKFwidGhpc1wiKTtcclxufSBjYXRjaChlKSB7XHJcblx0Ly8gVGhpcyB3b3JrcyBpZiB0aGUgd2luZG93IHJlZmVyZW5jZSBpcyBhdmFpbGFibGVcclxuXHRpZih0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKVxyXG5cdFx0ZyA9IHdpbmRvdztcclxufVxyXG5cclxuLy8gZyBjYW4gc3RpbGwgYmUgdW5kZWZpbmVkLCBidXQgbm90aGluZyB0byBkbyBhYm91dCBpdC4uLlxyXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xyXG4vLyBlYXNpZXIgdG8gaGFuZGxlIHRoaXMgY2FzZS4gaWYoIWdsb2JhbCkgeyAuLi59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGc7XHJcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL25vZGVfbW9kdWxlcy93ZWJwYWNrL2J1aWxkaW4vZ2xvYmFsLmpzXG4vLyBtb2R1bGUgaWQgPSAxMFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///10\n");

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return (b64.length * 3 / 4) - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr((len * 3 / 4) - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0; i < l; i += 4) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2Jhc2U2NC1qcy9pbmRleC5qcz9jYTFmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxrQ0FBa0MsU0FBUztBQUMzQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUEsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixTQUFTO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwwQ0FBMEMsVUFBVTtBQUNwRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSIsImZpbGUiOiIxMS5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5leHBvcnRzLmJ5dGVMZW5ndGggPSBieXRlTGVuZ3RoXG5leHBvcnRzLnRvQnl0ZUFycmF5ID0gdG9CeXRlQXJyYXlcbmV4cG9ydHMuZnJvbUJ5dGVBcnJheSA9IGZyb21CeXRlQXJyYXlcblxudmFyIGxvb2t1cCA9IFtdXG52YXIgcmV2TG9va3VwID0gW11cbnZhciBBcnIgPSB0eXBlb2YgVWludDhBcnJheSAhPT0gJ3VuZGVmaW5lZCcgPyBVaW50OEFycmF5IDogQXJyYXlcblxudmFyIGNvZGUgPSAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrLydcbmZvciAodmFyIGkgPSAwLCBsZW4gPSBjb2RlLmxlbmd0aDsgaSA8IGxlbjsgKytpKSB7XG4gIGxvb2t1cFtpXSA9IGNvZGVbaV1cbiAgcmV2TG9va3VwW2NvZGUuY2hhckNvZGVBdChpKV0gPSBpXG59XG5cbnJldkxvb2t1cFsnLScuY2hhckNvZGVBdCgwKV0gPSA2MlxucmV2TG9va3VwWydfJy5jaGFyQ29kZUF0KDApXSA9IDYzXG5cbmZ1bmN0aW9uIHBsYWNlSG9sZGVyc0NvdW50IChiNjQpIHtcbiAgdmFyIGxlbiA9IGI2NC5sZW5ndGhcbiAgaWYgKGxlbiAlIDQgPiAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHN0cmluZy4gTGVuZ3RoIG11c3QgYmUgYSBtdWx0aXBsZSBvZiA0JylcbiAgfVxuXG4gIC8vIHRoZSBudW1iZXIgb2YgZXF1YWwgc2lnbnMgKHBsYWNlIGhvbGRlcnMpXG4gIC8vIGlmIHRoZXJlIGFyZSB0d28gcGxhY2Vob2xkZXJzLCB0aGFuIHRoZSB0d28gY2hhcmFjdGVycyBiZWZvcmUgaXRcbiAgLy8gcmVwcmVzZW50IG9uZSBieXRlXG4gIC8vIGlmIHRoZXJlIGlzIG9ubHkgb25lLCB0aGVuIHRoZSB0aHJlZSBjaGFyYWN0ZXJzIGJlZm9yZSBpdCByZXByZXNlbnQgMiBieXRlc1xuICAvLyB0aGlzIGlzIGp1c3QgYSBjaGVhcCBoYWNrIHRvIG5vdCBkbyBpbmRleE9mIHR3aWNlXG4gIHJldHVybiBiNjRbbGVuIC0gMl0gPT09ICc9JyA/IDIgOiBiNjRbbGVuIC0gMV0gPT09ICc9JyA/IDEgOiAwXG59XG5cbmZ1bmN0aW9uIGJ5dGVMZW5ndGggKGI2NCkge1xuICAvLyBiYXNlNjQgaXMgNC8zICsgdXAgdG8gdHdvIGNoYXJhY3RlcnMgb2YgdGhlIG9yaWdpbmFsIGRhdGFcbiAgcmV0dXJuIChiNjQubGVuZ3RoICogMyAvIDQpIC0gcGxhY2VIb2xkZXJzQ291bnQoYjY0KVxufVxuXG5mdW5jdGlvbiB0b0J5dGVBcnJheSAoYjY0KSB7XG4gIHZhciBpLCBsLCB0bXAsIHBsYWNlSG9sZGVycywgYXJyXG4gIHZhciBsZW4gPSBiNjQubGVuZ3RoXG4gIHBsYWNlSG9sZGVycyA9IHBsYWNlSG9sZGVyc0NvdW50KGI2NClcblxuICBhcnIgPSBuZXcgQXJyKChsZW4gKiAzIC8gNCkgLSBwbGFjZUhvbGRlcnMpXG5cbiAgLy8gaWYgdGhlcmUgYXJlIHBsYWNlaG9sZGVycywgb25seSBnZXQgdXAgdG8gdGhlIGxhc3QgY29tcGxldGUgNCBjaGFyc1xuICBsID0gcGxhY2VIb2xkZXJzID4gMCA/IGxlbiAtIDQgOiBsZW5cblxuICB2YXIgTCA9IDBcblxuICBmb3IgKGkgPSAwOyBpIDwgbDsgaSArPSA0KSB7XG4gICAgdG1wID0gKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpKV0gPDwgMTgpIHwgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMSldIDw8IDEyKSB8IChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDIpXSA8PCA2KSB8IHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMyldXG4gICAgYXJyW0wrK10gPSAodG1wID4+IDE2KSAmIDB4RkZcbiAgICBhcnJbTCsrXSA9ICh0bXAgPj4gOCkgJiAweEZGXG4gICAgYXJyW0wrK10gPSB0bXAgJiAweEZGXG4gIH1cblxuICBpZiAocGxhY2VIb2xkZXJzID09PSAyKSB7XG4gICAgdG1wID0gKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpKV0gPDwgMikgfCAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAxKV0gPj4gNClcbiAgICBhcnJbTCsrXSA9IHRtcCAmIDB4RkZcbiAgfSBlbHNlIGlmIChwbGFjZUhvbGRlcnMgPT09IDEpIHtcbiAgICB0bXAgPSAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkpXSA8PCAxMCkgfCAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAxKV0gPDwgNCkgfCAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAyKV0gPj4gMilcbiAgICBhcnJbTCsrXSA9ICh0bXAgPj4gOCkgJiAweEZGXG4gICAgYXJyW0wrK10gPSB0bXAgJiAweEZGXG4gIH1cblxuICByZXR1cm4gYXJyXG59XG5cbmZ1bmN0aW9uIHRyaXBsZXRUb0Jhc2U2NCAobnVtKSB7XG4gIHJldHVybiBsb29rdXBbbnVtID4+IDE4ICYgMHgzRl0gKyBsb29rdXBbbnVtID4+IDEyICYgMHgzRl0gKyBsb29rdXBbbnVtID4+IDYgJiAweDNGXSArIGxvb2t1cFtudW0gJiAweDNGXVxufVxuXG5mdW5jdGlvbiBlbmNvZGVDaHVuayAodWludDgsIHN0YXJ0LCBlbmQpIHtcbiAgdmFyIHRtcFxuICB2YXIgb3V0cHV0ID0gW11cbiAgZm9yICh2YXIgaSA9IHN0YXJ0OyBpIDwgZW5kOyBpICs9IDMpIHtcbiAgICB0bXAgPSAodWludDhbaV0gPDwgMTYpICsgKHVpbnQ4W2kgKyAxXSA8PCA4KSArICh1aW50OFtpICsgMl0pXG4gICAgb3V0cHV0LnB1c2godHJpcGxldFRvQmFzZTY0KHRtcCkpXG4gIH1cbiAgcmV0dXJuIG91dHB1dC5qb2luKCcnKVxufVxuXG5mdW5jdGlvbiBmcm9tQnl0ZUFycmF5ICh1aW50OCkge1xuICB2YXIgdG1wXG4gIHZhciBsZW4gPSB1aW50OC5sZW5ndGhcbiAgdmFyIGV4dHJhQnl0ZXMgPSBsZW4gJSAzIC8vIGlmIHdlIGhhdmUgMSBieXRlIGxlZnQsIHBhZCAyIGJ5dGVzXG4gIHZhciBvdXRwdXQgPSAnJ1xuICB2YXIgcGFydHMgPSBbXVxuICB2YXIgbWF4Q2h1bmtMZW5ndGggPSAxNjM4MyAvLyBtdXN0IGJlIG11bHRpcGxlIG9mIDNcblxuICAvLyBnbyB0aHJvdWdoIHRoZSBhcnJheSBldmVyeSB0aHJlZSBieXRlcywgd2UnbGwgZGVhbCB3aXRoIHRyYWlsaW5nIHN0dWZmIGxhdGVyXG4gIGZvciAodmFyIGkgPSAwLCBsZW4yID0gbGVuIC0gZXh0cmFCeXRlczsgaSA8IGxlbjI7IGkgKz0gbWF4Q2h1bmtMZW5ndGgpIHtcbiAgICBwYXJ0cy5wdXNoKGVuY29kZUNodW5rKHVpbnQ4LCBpLCAoaSArIG1heENodW5rTGVuZ3RoKSA+IGxlbjIgPyBsZW4yIDogKGkgKyBtYXhDaHVua0xlbmd0aCkpKVxuICB9XG5cbiAgLy8gcGFkIHRoZSBlbmQgd2l0aCB6ZXJvcywgYnV0IG1ha2Ugc3VyZSB0byBub3QgZm9yZ2V0IHRoZSBleHRyYSBieXRlc1xuICBpZiAoZXh0cmFCeXRlcyA9PT0gMSkge1xuICAgIHRtcCA9IHVpbnQ4W2xlbiAtIDFdXG4gICAgb3V0cHV0ICs9IGxvb2t1cFt0bXAgPj4gMl1cbiAgICBvdXRwdXQgKz0gbG9va3VwWyh0bXAgPDwgNCkgJiAweDNGXVxuICAgIG91dHB1dCArPSAnPT0nXG4gIH0gZWxzZSBpZiAoZXh0cmFCeXRlcyA9PT0gMikge1xuICAgIHRtcCA9ICh1aW50OFtsZW4gLSAyXSA8PCA4KSArICh1aW50OFtsZW4gLSAxXSlcbiAgICBvdXRwdXQgKz0gbG9va3VwW3RtcCA+PiAxMF1cbiAgICBvdXRwdXQgKz0gbG9va3VwWyh0bXAgPj4gNCkgJiAweDNGXVxuICAgIG91dHB1dCArPSBsb29rdXBbKHRtcCA8PCAyKSAmIDB4M0ZdXG4gICAgb3V0cHV0ICs9ICc9J1xuICB9XG5cbiAgcGFydHMucHVzaChvdXRwdXQpXG5cbiAgcmV0dXJuIHBhcnRzLmpvaW4oJycpXG59XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuLi9ub2RlX21vZHVsZXMvYmFzZTY0LWpzL2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSAxMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///11\n");

/***/ }),
/* 12 */
/***/ (function(module, exports) {

eval("exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2llZWU3NTQvaW5kZXguanM/MjYwMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsUUFBUSxXQUFXOztBQUVuQjtBQUNBO0FBQ0E7QUFDQSxRQUFRLFdBQVc7O0FBRW5CO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxRQUFRLFdBQVc7O0FBRW5CO0FBQ0E7QUFDQSxRQUFRLFVBQVU7O0FBRWxCO0FBQ0EiLCJmaWxlIjoiMTIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzLnJlYWQgPSBmdW5jdGlvbiAoYnVmZmVyLCBvZmZzZXQsIGlzTEUsIG1MZW4sIG5CeXRlcykge1xuICB2YXIgZSwgbVxuICB2YXIgZUxlbiA9IG5CeXRlcyAqIDggLSBtTGVuIC0gMVxuICB2YXIgZU1heCA9ICgxIDw8IGVMZW4pIC0gMVxuICB2YXIgZUJpYXMgPSBlTWF4ID4+IDFcbiAgdmFyIG5CaXRzID0gLTdcbiAgdmFyIGkgPSBpc0xFID8gKG5CeXRlcyAtIDEpIDogMFxuICB2YXIgZCA9IGlzTEUgPyAtMSA6IDFcbiAgdmFyIHMgPSBidWZmZXJbb2Zmc2V0ICsgaV1cblxuICBpICs9IGRcblxuICBlID0gcyAmICgoMSA8PCAoLW5CaXRzKSkgLSAxKVxuICBzID4+PSAoLW5CaXRzKVxuICBuQml0cyArPSBlTGVuXG4gIGZvciAoOyBuQml0cyA+IDA7IGUgPSBlICogMjU2ICsgYnVmZmVyW29mZnNldCArIGldLCBpICs9IGQsIG5CaXRzIC09IDgpIHt9XG5cbiAgbSA9IGUgJiAoKDEgPDwgKC1uQml0cykpIC0gMSlcbiAgZSA+Pj0gKC1uQml0cylcbiAgbkJpdHMgKz0gbUxlblxuICBmb3IgKDsgbkJpdHMgPiAwOyBtID0gbSAqIDI1NiArIGJ1ZmZlcltvZmZzZXQgKyBpXSwgaSArPSBkLCBuQml0cyAtPSA4KSB7fVxuXG4gIGlmIChlID09PSAwKSB7XG4gICAgZSA9IDEgLSBlQmlhc1xuICB9IGVsc2UgaWYgKGUgPT09IGVNYXgpIHtcbiAgICByZXR1cm4gbSA/IE5hTiA6ICgocyA/IC0xIDogMSkgKiBJbmZpbml0eSlcbiAgfSBlbHNlIHtcbiAgICBtID0gbSArIE1hdGgucG93KDIsIG1MZW4pXG4gICAgZSA9IGUgLSBlQmlhc1xuICB9XG4gIHJldHVybiAocyA/IC0xIDogMSkgKiBtICogTWF0aC5wb3coMiwgZSAtIG1MZW4pXG59XG5cbmV4cG9ydHMud3JpdGUgPSBmdW5jdGlvbiAoYnVmZmVyLCB2YWx1ZSwgb2Zmc2V0LCBpc0xFLCBtTGVuLCBuQnl0ZXMpIHtcbiAgdmFyIGUsIG0sIGNcbiAgdmFyIGVMZW4gPSBuQnl0ZXMgKiA4IC0gbUxlbiAtIDFcbiAgdmFyIGVNYXggPSAoMSA8PCBlTGVuKSAtIDFcbiAgdmFyIGVCaWFzID0gZU1heCA+PiAxXG4gIHZhciBydCA9IChtTGVuID09PSAyMyA/IE1hdGgucG93KDIsIC0yNCkgLSBNYXRoLnBvdygyLCAtNzcpIDogMClcbiAgdmFyIGkgPSBpc0xFID8gMCA6IChuQnl0ZXMgLSAxKVxuICB2YXIgZCA9IGlzTEUgPyAxIDogLTFcbiAgdmFyIHMgPSB2YWx1ZSA8IDAgfHwgKHZhbHVlID09PSAwICYmIDEgLyB2YWx1ZSA8IDApID8gMSA6IDBcblxuICB2YWx1ZSA9IE1hdGguYWJzKHZhbHVlKVxuXG4gIGlmIChpc05hTih2YWx1ZSkgfHwgdmFsdWUgPT09IEluZmluaXR5KSB7XG4gICAgbSA9IGlzTmFOKHZhbHVlKSA/IDEgOiAwXG4gICAgZSA9IGVNYXhcbiAgfSBlbHNlIHtcbiAgICBlID0gTWF0aC5mbG9vcihNYXRoLmxvZyh2YWx1ZSkgLyBNYXRoLkxOMilcbiAgICBpZiAodmFsdWUgKiAoYyA9IE1hdGgucG93KDIsIC1lKSkgPCAxKSB7XG4gICAgICBlLS1cbiAgICAgIGMgKj0gMlxuICAgIH1cbiAgICBpZiAoZSArIGVCaWFzID49IDEpIHtcbiAgICAgIHZhbHVlICs9IHJ0IC8gY1xuICAgIH0gZWxzZSB7XG4gICAgICB2YWx1ZSArPSBydCAqIE1hdGgucG93KDIsIDEgLSBlQmlhcylcbiAgICB9XG4gICAgaWYgKHZhbHVlICogYyA+PSAyKSB7XG4gICAgICBlKytcbiAgICAgIGMgLz0gMlxuICAgIH1cblxuICAgIGlmIChlICsgZUJpYXMgPj0gZU1heCkge1xuICAgICAgbSA9IDBcbiAgICAgIGUgPSBlTWF4XG4gICAgfSBlbHNlIGlmIChlICsgZUJpYXMgPj0gMSkge1xuICAgICAgbSA9ICh2YWx1ZSAqIGMgLSAxKSAqIE1hdGgucG93KDIsIG1MZW4pXG4gICAgICBlID0gZSArIGVCaWFzXG4gICAgfSBlbHNlIHtcbiAgICAgIG0gPSB2YWx1ZSAqIE1hdGgucG93KDIsIGVCaWFzIC0gMSkgKiBNYXRoLnBvdygyLCBtTGVuKVxuICAgICAgZSA9IDBcbiAgICB9XG4gIH1cblxuICBmb3IgKDsgbUxlbiA+PSA4OyBidWZmZXJbb2Zmc2V0ICsgaV0gPSBtICYgMHhmZiwgaSArPSBkLCBtIC89IDI1NiwgbUxlbiAtPSA4KSB7fVxuXG4gIGUgPSAoZSA8PCBtTGVuKSB8IG1cbiAgZUxlbiArPSBtTGVuXG4gIGZvciAoOyBlTGVuID4gMDsgYnVmZmVyW29mZnNldCArIGldID0gZSAmIDB4ZmYsIGkgKz0gZCwgZSAvPSAyNTYsIGVMZW4gLT0gOCkge31cblxuICBidWZmZXJbb2Zmc2V0ICsgaSAtIGRdIHw9IHMgKiAxMjhcbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4uL25vZGVfbW9kdWxlcy9pZWVlNzU0L2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSAxMlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///12\n");

/***/ }),
/* 13 */
/***/ (function(module, exports) {

eval("var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2lzYXJyYXkvaW5kZXguanM/NDQ0NiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUI7O0FBRWpCO0FBQ0E7QUFDQSIsImZpbGUiOiIxMy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciB0b1N0cmluZyA9IHt9LnRvU3RyaW5nO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gKGFycikge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbChhcnIpID09ICdbb2JqZWN0IEFycmF5XSc7XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi4vbm9kZV9tb2R1bGVzL2lzYXJyYXkvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDEzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///13\n");

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _symbol = Symbol();\n\nvar PitchClass = function () {\n  function PitchClass(symbol, number, name) {\n    _classCallCheck(this, PitchClass);\n\n    if (symbol !== _symbol) {\n      throw new Error('Cannot call constructor of PitchClass.');\n    }\n    this._number = number;\n    this._name = name;\n  }\n\n  _createClass(PitchClass, [{\n    key: 'number',\n    get: function get() {\n      return this._number;\n    }\n  }, {\n    key: 'name',\n    get: function get() {\n      return this._name;\n    }\n  }], [{\n    key: 'C',\n    get: function get() {\n      return new PitchClass(_symbol, 0, 'C');\n    }\n  }, {\n    key: 'CS',\n    get: function get() {\n      return new PitchClass(_symbol, 1, 'C#');\n    }\n  }, {\n    key: 'DF',\n    get: function get() {\n      return new PitchClass(_symbol, 1, 'Db');\n    }\n  }, {\n    key: 'D',\n    get: function get() {\n      return new PitchClass(_symbol, 2, 'D');\n    }\n  }, {\n    key: 'DS',\n    get: function get() {\n      return new PitchClass(_symbol, 3, 'D#');\n    }\n  }, {\n    key: 'EF',\n    get: function get() {\n      return new PitchClass(_symbol, 3, 'Eb');\n    }\n  }, {\n    key: 'E',\n    get: function get() {\n      return new PitchClass(_symbol, 4, 'E');\n    }\n  }, {\n    key: 'FF',\n    get: function get() {\n      return new PitchClass(_symbol, 4, 'Fb');\n    }\n  }, {\n    key: 'F',\n    get: function get() {\n      return new PitchClass(_symbol, 5, 'F');\n    }\n  }, {\n    key: 'FS',\n    get: function get() {\n      return new PitchClass(_symbol, 6, 'F#');\n    }\n  }, {\n    key: 'GF',\n    get: function get() {\n      return new PitchClass(_symbol, 6, 'Gb');\n    }\n  }, {\n    key: 'G',\n    get: function get() {\n      return new PitchClass(_symbol, 7, 'G');\n    }\n  }, {\n    key: 'GS',\n    get: function get() {\n      return new PitchClass(_symbol, 8, 'G#');\n    }\n  }, {\n    key: 'AF',\n    get: function get() {\n      return new PitchClass(_symbol, 8, 'Ab');\n    }\n  }, {\n    key: 'A',\n    get: function get() {\n      return new PitchClass(_symbol, 9, 'A');\n    }\n  }, {\n    key: 'AS',\n    get: function get() {\n      return new PitchClass(_symbol, 10, 'A#');\n    }\n  }, {\n    key: 'BF',\n    get: function get() {\n      return new PitchClass(_symbol, 10, 'Bb');\n    }\n  }, {\n    key: 'B',\n    get: function get() {\n      return new PitchClass(_symbol, 11, 'B');\n    }\n  }, {\n    key: 'CF',\n    get: function get() {\n      return new PitchClass(_symbol, 11, 'Cb');\n    }\n  }]);\n\n  return PitchClass;\n}();\n\nexports.default = PitchClass;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9waXRjaC1jbGFzcy5qcz9mNmVmIl0sIm5hbWVzIjpbIl9zeW1ib2wiLCJTeW1ib2wiLCJQaXRjaENsYXNzIiwic3ltYm9sIiwibnVtYmVyIiwibmFtZSIsIkVycm9yIiwiX251bWJlciIsIl9uYW1lIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEsSUFBTUEsVUFBVUMsUUFBaEI7O0lBRXFCQyxVO0FBQ25CLHNCQUFZQyxNQUFaLEVBQW9CQyxNQUFwQixFQUE0QkMsSUFBNUIsRUFBa0M7QUFBQTs7QUFDaEMsUUFBSUYsV0FBV0gsT0FBZixFQUF3QjtBQUN0QixZQUFNLElBQUlNLEtBQUosQ0FBVSx3Q0FBVixDQUFOO0FBQ0Q7QUFDRCxTQUFLQyxPQUFMLEdBQWVILE1BQWY7QUFDQSxTQUFLSSxLQUFMLEdBQWFILElBQWI7QUFDRDs7Ozt3QkFFWTtBQUNYLGFBQU8sS0FBS0UsT0FBWjtBQUNEOzs7d0JBRVU7QUFDVCxhQUFPLEtBQUtDLEtBQVo7QUFDRDs7O3dCQUVjO0FBQ2IsYUFBTyxJQUFJTixVQUFKLENBQWVGLE9BQWYsRUFBd0IsQ0FBeEIsRUFBMkIsR0FBM0IsQ0FBUDtBQUNEOzs7d0JBRWU7QUFDZCxhQUFPLElBQUlFLFVBQUosQ0FBZUYsT0FBZixFQUF3QixDQUF4QixFQUEyQixJQUEzQixDQUFQO0FBQ0Q7Ozt3QkFFZTtBQUNkLGFBQU8sSUFBSUUsVUFBSixDQUFlRixPQUFmLEVBQXdCLENBQXhCLEVBQTJCLElBQTNCLENBQVA7QUFDRDs7O3dCQUVjO0FBQ2IsYUFBTyxJQUFJRSxVQUFKLENBQWVGLE9BQWYsRUFBd0IsQ0FBeEIsRUFBMkIsR0FBM0IsQ0FBUDtBQUNEOzs7d0JBRWU7QUFDZCxhQUFPLElBQUlFLFVBQUosQ0FBZUYsT0FBZixFQUF3QixDQUF4QixFQUEyQixJQUEzQixDQUFQO0FBQ0Q7Ozt3QkFFZTtBQUNkLGFBQU8sSUFBSUUsVUFBSixDQUFlRixPQUFmLEVBQXdCLENBQXhCLEVBQTJCLElBQTNCLENBQVA7QUFDRDs7O3dCQUVjO0FBQ2IsYUFBTyxJQUFJRSxVQUFKLENBQWVGLE9BQWYsRUFBd0IsQ0FBeEIsRUFBMkIsR0FBM0IsQ0FBUDtBQUNEOzs7d0JBRWU7QUFDZCxhQUFPLElBQUlFLFVBQUosQ0FBZUYsT0FBZixFQUF3QixDQUF4QixFQUEyQixJQUEzQixDQUFQO0FBQ0Q7Ozt3QkFFYztBQUNiLGFBQU8sSUFBSUUsVUFBSixDQUFlRixPQUFmLEVBQXdCLENBQXhCLEVBQTJCLEdBQTNCLENBQVA7QUFDRDs7O3dCQUVlO0FBQ2QsYUFBTyxJQUFJRSxVQUFKLENBQWVGLE9BQWYsRUFBd0IsQ0FBeEIsRUFBMkIsSUFBM0IsQ0FBUDtBQUNEOzs7d0JBRWU7QUFDZCxhQUFPLElBQUlFLFVBQUosQ0FBZUYsT0FBZixFQUF3QixDQUF4QixFQUEyQixJQUEzQixDQUFQO0FBQ0Q7Ozt3QkFFYztBQUNiLGFBQU8sSUFBSUUsVUFBSixDQUFlRixPQUFmLEVBQXdCLENBQXhCLEVBQTJCLEdBQTNCLENBQVA7QUFDRDs7O3dCQUVlO0FBQ2QsYUFBTyxJQUFJRSxVQUFKLENBQWVGLE9BQWYsRUFBd0IsQ0FBeEIsRUFBMkIsSUFBM0IsQ0FBUDtBQUNEOzs7d0JBRWU7QUFDZCxhQUFPLElBQUlFLFVBQUosQ0FBZUYsT0FBZixFQUF3QixDQUF4QixFQUEyQixJQUEzQixDQUFQO0FBQ0Q7Ozt3QkFFYztBQUNiLGFBQU8sSUFBSUUsVUFBSixDQUFlRixPQUFmLEVBQXdCLENBQXhCLEVBQTJCLEdBQTNCLENBQVA7QUFDRDs7O3dCQUVlO0FBQ2QsYUFBTyxJQUFJRSxVQUFKLENBQWVGLE9BQWYsRUFBd0IsRUFBeEIsRUFBNEIsSUFBNUIsQ0FBUDtBQUNEOzs7d0JBRWU7QUFDZCxhQUFPLElBQUlFLFVBQUosQ0FBZUYsT0FBZixFQUF3QixFQUF4QixFQUE0QixJQUE1QixDQUFQO0FBQ0Q7Ozt3QkFFYztBQUNiLGFBQU8sSUFBSUUsVUFBSixDQUFlRixPQUFmLEVBQXdCLEVBQXhCLEVBQTRCLEdBQTVCLENBQVA7QUFDRDs7O3dCQUVlO0FBQ2QsYUFBTyxJQUFJRSxVQUFKLENBQWVGLE9BQWYsRUFBd0IsRUFBeEIsRUFBNEIsSUFBNUIsQ0FBUDtBQUNEOzs7Ozs7a0JBM0ZrQkUsVSIsImZpbGUiOiIxNC5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IF9zeW1ib2wgPSBTeW1ib2woKTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGl0Y2hDbGFzcyB7XG4gIGNvbnN0cnVjdG9yKHN5bWJvbCwgbnVtYmVyLCBuYW1lKSB7XG4gICAgaWYgKHN5bWJvbCAhPT0gX3N5bWJvbCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdDYW5ub3QgY2FsbCBjb25zdHJ1Y3RvciBvZiBQaXRjaENsYXNzLicpO1xuICAgIH1cbiAgICB0aGlzLl9udW1iZXIgPSBudW1iZXI7XG4gICAgdGhpcy5fbmFtZSA9IG5hbWU7XG4gIH1cblxuICBnZXQgbnVtYmVyKCkge1xuICAgIHJldHVybiB0aGlzLl9udW1iZXI7XG4gIH1cblxuICBnZXQgbmFtZSgpIHtcbiAgICByZXR1cm4gdGhpcy5fbmFtZTtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgQygpIHtcbiAgICByZXR1cm4gbmV3IFBpdGNoQ2xhc3MoX3N5bWJvbCwgMCwgJ0MnKTtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgQ1MoKSB7XG4gICAgcmV0dXJuIG5ldyBQaXRjaENsYXNzKF9zeW1ib2wsIDEsICdDIycpO1xuICB9XG5cbiAgc3RhdGljIGdldCBERigpIHtcbiAgICByZXR1cm4gbmV3IFBpdGNoQ2xhc3MoX3N5bWJvbCwgMSwgJ0RiJyk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IEQoKSB7XG4gICAgcmV0dXJuIG5ldyBQaXRjaENsYXNzKF9zeW1ib2wsIDIsICdEJyk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IERTKCkge1xuICAgIHJldHVybiBuZXcgUGl0Y2hDbGFzcyhfc3ltYm9sLCAzLCAnRCMnKTtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgRUYoKSB7XG4gICAgcmV0dXJuIG5ldyBQaXRjaENsYXNzKF9zeW1ib2wsIDMsICdFYicpO1xuICB9XG5cbiAgc3RhdGljIGdldCBFKCkge1xuICAgIHJldHVybiBuZXcgUGl0Y2hDbGFzcyhfc3ltYm9sLCA0LCAnRScpO1xuICB9XG5cbiAgc3RhdGljIGdldCBGRigpIHtcbiAgICByZXR1cm4gbmV3IFBpdGNoQ2xhc3MoX3N5bWJvbCwgNCwgJ0ZiJyk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IEYoKSB7XG4gICAgcmV0dXJuIG5ldyBQaXRjaENsYXNzKF9zeW1ib2wsIDUsICdGJyk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IEZTKCkge1xuICAgIHJldHVybiBuZXcgUGl0Y2hDbGFzcyhfc3ltYm9sLCA2LCAnRiMnKTtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgR0YoKSB7XG4gICAgcmV0dXJuIG5ldyBQaXRjaENsYXNzKF9zeW1ib2wsIDYsICdHYicpO1xuICB9XG5cbiAgc3RhdGljIGdldCBHKCkge1xuICAgIHJldHVybiBuZXcgUGl0Y2hDbGFzcyhfc3ltYm9sLCA3LCAnRycpO1xuICB9XG5cbiAgc3RhdGljIGdldCBHUygpIHtcbiAgICByZXR1cm4gbmV3IFBpdGNoQ2xhc3MoX3N5bWJvbCwgOCwgJ0cjJyk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IEFGKCkge1xuICAgIHJldHVybiBuZXcgUGl0Y2hDbGFzcyhfc3ltYm9sLCA4LCAnQWInKTtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgQSgpIHtcbiAgICByZXR1cm4gbmV3IFBpdGNoQ2xhc3MoX3N5bWJvbCwgOSwgJ0EnKTtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgQVMoKSB7XG4gICAgcmV0dXJuIG5ldyBQaXRjaENsYXNzKF9zeW1ib2wsIDEwLCAnQSMnKTtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgQkYoKSB7XG4gICAgcmV0dXJuIG5ldyBQaXRjaENsYXNzKF9zeW1ib2wsIDEwLCAnQmInKTtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgQigpIHtcbiAgICByZXR1cm4gbmV3IFBpdGNoQ2xhc3MoX3N5bWJvbCwgMTEsICdCJyk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IENGKCkge1xuICAgIHJldHVybiBuZXcgUGl0Y2hDbGFzcyhfc3ltYm9sLCAxMSwgJ0NiJyk7XG4gIH1cbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3BpdGNoLWNsYXNzLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///14\n");

/***/ })
/******/ ]);
});