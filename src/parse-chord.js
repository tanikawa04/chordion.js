module.exports = (function() {
	"use strict";
	/*
	 * Generated by snake parser 0.2.4.1
	 */
	function $parse($input, options) {
		options = options || {};
		var $inputLength = $input.length;
		var $pos = 0;
		var $objs = [];
		var $objsLen = 0;
		var $memo = [];
		var $matchTable = new Array($inputLength);
		var $errorMask = 0;
		var $failMatchs = [];
		var $failPos = 0;
		var $failureObj = {};

    function check(seq, tensions) {
        var i = 0, j = 0;
        while (seq[i] && tensions[j])
            if (seq[i] === tensions[j++])
                i += 1;
        return !seq[i];
    }


		function mod$0($) { return $.join('') };

		function rule$start() {
			var pos0 = $pos, objsLen0 = $objsLen;
			rule$chord();
		};

		function rule$chord() {
			var key = $pos * 18 + 0, pos0 = $pos, objsLen0 = $objsLen;
			if ($readMemo(key)) return;
			rule$root();
			if ($pos !== -1) {
				if ($objsLen === objsLen0)
					$objs[objsLen0] = undefined;
				$objs[objsLen0 + 1] = "root";
				$objsLen = objsLen0 + 2;
			}
			if ($pos !== -1) {
				var objsLen1 = $objsLen;
				rule$type();
				if ($pos !== -1) {
					if ($objsLen === objsLen1)
						$objs[objsLen1] = undefined;
					$objs[objsLen1 + 1] = "type";
					$objsLen = objsLen1 + 2;
				}
				if ($pos !== -1) {
					var objsLen1 = $objsLen;
					var pos1 = $pos;
					rule$tensions();
					if ($pos === -1) {
						$pos = pos1;
						$objsLen = objsLen1;
					}
					if ($pos !== -1) {
						if ($objsLen === objsLen1)
							$objs[objsLen1] = undefined;
						$objs[objsLen1 + 1] = "tensions";
						$objsLen = objsLen1 + 2;
					}
					if ($pos !== -1) {
						var objsLen1 = $objsLen;
						var pos1 = $pos;
						rule$bass();
						if ($pos === -1) {
							$pos = pos1;
							$objsLen = objsLen1;
						}
						if ($pos !== -1) {
							if ($objsLen === objsLen1)
								$objs[objsLen1] = undefined;
							$objs[objsLen1 + 1] = "bass";
							$objsLen = objsLen1 + 2;
						}
					}
				}
			}
			if ($pos !== -1) {
				var obj0 = {};
				for (var i = objsLen0; i < $objsLen; i += 2)
					obj0[$objs[i + 1]] = $objs[i];
				$objsLen = objsLen0 + 1;
				$objs[objsLen0] = obj0;
			}
			$writeMemo(key, $pos !== -1 && $objs.slice(objsLen0, $objsLen));
		};

		function rule$root() {
			var key = $pos * 18 + 1, pos0 = $pos, objsLen0 = $objsLen;
			if ($readMemo(key)) return;
			rule$pitchClass();
			if ($pos !== -1) {
				var pos1 = $pos, objsLen1 = $objsLen;
				rule$accidental();
				if ($pos === -1) {
					$pos = pos1;
					$objsLen = objsLen1;
				}
			}
			if ($pos !== -1) {
				$objs[objsLen0] = $objs.slice(objsLen0, $objsLen);
				$objsLen = objsLen0 + 1;
			}
			if ($pos !== -1) {
				$objs[objsLen0] = mod$0($objs[objsLen0]);
				$objsLen = objsLen0 + 1;
			}
			$writeMemo(key, $pos !== -1 && $objs.slice(objsLen0, $objsLen));
		};

		function rule$type() {
			var key = $pos * 18 + 2, pos0 = $pos, objsLen0 = $objsLen;
			if ($readMemo(key)) return;
			if ($input.substr($pos, 4) === "add9")
				$pos += 4;
			else
				$matchingFail("\"add9\"");
			if ($pos !== -1) {
				$objs[$objsLen++] = "ADD_NINTH";
			}
			if ($pos === -1) {
				$pos = pos0;
				$objsLen = objsLen0;
				rule$major();
				if ($pos !== -1) {
					if ($input.charCodeAt($pos) === 55)
						$pos += 1;
					else
						$matchingFail("\"7\"");
					if ($pos !== -1) {
						$objs[$objsLen++] = "MAJOR_SEVENTH";
					}
				}
				if ($pos === -1) {
					$pos = pos0;
					$objsLen = objsLen0;
					if ($input.substr($pos, 5) === "7sus4")
						$pos += 5;
					else
						$matchingFail("\"7sus4\"");
					if ($pos !== -1) {
						$objs[$objsLen++] = "SEVENTH_SUSPENDED_FOURTH";
					}
					if ($pos === -1) {
						$pos = pos0;
						$objsLen = objsLen0;
						if ($input.charCodeAt($pos) === 55)
							$pos += 1;
						else
							$matchingFail("\"7\"");
						if ($pos !== -1) {
							$objs[$objsLen++] = "SEVENTH";
						}
						if ($pos === -1) {
							$pos = pos0;
							$objsLen = objsLen0;
							if ($input.charCodeAt($pos) === 54)
								$pos += 1;
							else
								$matchingFail("\"6\"");
							if ($pos !== -1) {
								$objs[$objsLen++] = "SIXTH";
							}
							if ($pos === -1) {
								$pos = pos0;
								$objsLen = objsLen0;
								if ($input.substr($pos, 4) === "sus4")
									$pos += 4;
								else
									$matchingFail("\"sus4\"");
								if ($pos !== -1) {
									$objs[$objsLen++] = "SUSPENDED_FOURTH";
								}
								if ($pos === -1) {
									$pos = pos0;
									$objsLen = objsLen0;
									rule$minor();
									if ($pos !== -1) {
										if ($input.substr($pos, 4) === "add9")
											$pos += 4;
										else
											$matchingFail("\"add9\"");
										if ($pos !== -1) {
											$objs[$objsLen++] = "MINOR_ADD_NINTH";
										}
									}
									if ($pos === -1) {
										$pos = pos0;
										$objsLen = objsLen0;
										rule$minor();
										if ($pos !== -1) {
											rule$major();
											if ($pos !== -1) {
												if ($input.charCodeAt($pos) === 55)
													$pos += 1;
												else
													$matchingFail("\"7\"");
												if ($pos !== -1) {
													$objs[$objsLen++] = "MINOR_MAJOR_SEVENTH";
												}
											}
										}
										if ($pos === -1) {
											$pos = pos0;
											$objsLen = objsLen0;
											rule$minor();
											if ($pos !== -1) {
												if ($input.charCodeAt($pos) === 55)
													$pos += 1;
												else
													$matchingFail("\"7\"");
												if ($pos !== -1) {
													$objs[$objsLen++] = "MINOR_SEVENTH";
												}
											}
											if ($pos === -1) {
												$pos = pos0;
												$objsLen = objsLen0;
												rule$minor();
												if ($pos !== -1) {
													if ($input.charCodeAt($pos) === 54)
														$pos += 1;
													else
														$matchingFail("\"6\"");
													if ($pos !== -1) {
														$objs[$objsLen++] = "MINOR_SIXTH";
													}
												}
												if ($pos === -1) {
													$pos = pos0;
													$objsLen = objsLen0;
													$errorMask += 1;
													if ($input.substr($pos, 3) === "maj")
														$pos += 3;
													else
														$matchingFail("\"maj\"");
													$errorMask -= 1;
													if ($pos === -1) {
														$objsLen = objsLen0;
														$pos = pos0;
													} else {
														$pos = -1;
													}
													if ($pos !== -1) {
														rule$minor();
														if ($pos !== -1) {
															$objs[$objsLen++] = "MINOR";
														}
													}
													if ($pos === -1) {
														$pos = pos0;
														$objsLen = objsLen0;
														rule$augument();
														if ($pos !== -1) {
															if ($input.charCodeAt($pos) === 55)
																$pos += 1;
															else
																$matchingFail("\"7\"");
															if ($pos !== -1) {
																$objs[$objsLen++] = "AUGUMENT_SEVENTH";
															}
														}
														if ($pos === -1) {
															$pos = pos0;
															$objsLen = objsLen0;
															rule$augument();
															if ($pos !== -1) {
																$objs[$objsLen++] = "AUGUMENT";
															}
															if ($pos === -1) {
																$pos = pos0;
																$objsLen = objsLen0;
																rule$diminish();
																if ($pos !== -1) {
																	if ($input.charCodeAt($pos) === 55)
																		$pos += 1;
																	else
																		$matchingFail("\"7\"");
																	if ($pos !== -1) {
																		$objs[$objsLen++] = "DIMINISH_SEVENTH";
																	}
																}
																if ($pos === -1) {
																	$pos = pos0;
																	$objsLen = objsLen0;
																	rule$half_diminish();
																	if ($pos !== -1) {
																		$objs[$objsLen++] = "HALF_DIMINISH";
																	}
																	if ($pos === -1) {
																		$pos = pos0;
																		$objsLen = objsLen0;
																		rule$diminish();
																		if ($pos !== -1) {
																			$objs[$objsLen++] = "DIMINISH";
																		}
																		if ($pos === -1) {
																			$pos = pos0;
																			$objsLen = objsLen0;
																			rule$major();
																			if ($pos === -1) {
																				$pos = pos0;
																				$objsLen = objsLen0;
																			}
																			if ($pos !== -1) {
																				$objs[$objsLen++] = "MAJOR";
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
			$writeMemo(key, $pos !== -1 && $objs.slice(objsLen0, $objsLen));
		};

		function rule$tensions() {
			var key = $pos * 18 + 3, pos0 = $pos, objsLen0 = $objsLen;
			if ($readMemo(key)) return;
			rule$space();
			if ($pos !== -1) {
				if ($input.charCodeAt($pos) === 40)
					$pos += 1;
				else
					$matchingFail("\"(\"");
				if ($pos !== -1) {
					rule$space();
					if ($pos !== -1) {
						var objsLen1 = $objsLen;
						var pos1 = $pos, objsLen2 = $objsLen;
						for (var i0 = 0; ; i0++) {
							rule$tn_all();
							if ($pos !== -1) {
								rule$delimiter();
							}
							if ($pos !== -1) {
								if ($pos === pos1) throw new Error("Infinite loop detected.");
								pos1 = $pos;
								objsLen2 = $objsLen;
							} else {
								break;
							}
						}
						$pos = pos1;
						$objsLen = objsLen2;
						if (i0 < 1) $pos = -1;
						if ($pos !== -1) {
							$objs[objsLen1] = $objs.slice(objsLen1, $objsLen);
							$objsLen = objsLen1 + 1;
						}
						if ($pos !== -1) {
							rule$space();
							if ($pos !== -1) {
								if ($input.charCodeAt($pos) === 41)
									$pos += 1;
								else
									$matchingFail("\")\"");
								if ($pos !== -1) {
									rule$space();
								}
							}
						}
					}
				}
			}
			$writeMemo(key, $pos !== -1 && $objs.slice(objsLen0, $objsLen));
		};

		function rule$bass() {
			var key = $pos * 18 + 4, pos0 = $pos, objsLen0 = $objsLen;
			if ($readMemo(key)) return;
			rule$slash();
			if ($pos !== -1) {
				var objsLen1 = $objsLen;
				rule$pitchClass();
				if ($pos !== -1) {
					var pos1 = $pos, objsLen2 = $objsLen;
					rule$accidental();
					if ($pos === -1) {
						$pos = pos1;
						$objsLen = objsLen2;
					}
				}
				if ($pos !== -1) {
					$objs[objsLen1] = $objs.slice(objsLen1, $objsLen);
					$objsLen = objsLen1 + 1;
				}
				if ($pos !== -1) {
					$objs[objsLen1] = mod$0($objs[objsLen1]);
					$objsLen = objsLen1 + 1;
				}
			}
			$writeMemo(key, $pos !== -1 && $objs.slice(objsLen0, $objsLen));
		};

		function rule$pitchClass() {
			var key = $pos * 18 + 5, pos0 = $pos, objsLen0 = $objsLen;
			if ($readMemo(key)) return;
			var c = $input.charCodeAt($pos);
			if (65 <= c && c <= 71)
				$pos += 1;
			else
				$matchingFail("[A-G]");
			if ($pos !== -1) {
				$objs[$objsLen++] = $input.substring(pos0, $pos);
			}
			$writeMemo(key, $pos !== -1 && $objs.slice(objsLen0, $objsLen));
		};

		function rule$accidental() {
			var key = $pos * 18 + 6, pos0 = $pos, objsLen0 = $objsLen;
			if ($readMemo(key)) return;
			if ($input.charCodeAt($pos) === 9839)
				$pos += 1;
			else
				$matchingFail("\"\u266f\"");
			if ($pos !== -1) {
				$objs[$objsLen++] = "#";
			}
			if ($pos === -1) {
				$pos = pos0;
				$objsLen = objsLen0;
				if ($input.charCodeAt($pos) === 65283)
					$pos += 1;
				else
					$matchingFail("\"\uff03\"");
				if ($pos !== -1) {
					$objs[$objsLen++] = "#";
				}
				if ($pos === -1) {
					$pos = pos0;
					$objsLen = objsLen0;
					if ($input.charCodeAt($pos) === 35)
						$pos += 1;
					else
						$matchingFail("\"#\"");
					if ($pos !== -1) {
						$objs[$objsLen++] = "#";
					}
					if ($pos === -1) {
						$pos = pos0;
						$objsLen = objsLen0;
						if ($input.charCodeAt($pos) === 9837)
							$pos += 1;
						else
							$matchingFail("\"\u266d\"");
						if ($pos !== -1) {
							$objs[$objsLen++] = "b";
						}
						if ($pos === -1) {
							$pos = pos0;
							$objsLen = objsLen0;
							if ($input.charCodeAt($pos) === 98)
								$pos += 1;
							else
								$matchingFail("\"b\"");
							if ($pos !== -1) {
								$objs[$objsLen++] = "b";
							}
						}
					}
				}
			}
			$writeMemo(key, $pos !== -1 && $objs.slice(objsLen0, $objsLen));
		};

		function rule$major() {
			var key = $pos * 18 + 7, pos0 = $pos, objsLen0 = $objsLen;
			if ($readMemo(key)) return;
			if ($input.charCodeAt($pos) === 77)
				$pos += 1;
			else
				$matchingFail("\"M\"");
			if ($pos === -1) {
				$pos = pos0;
				$objsLen = objsLen0;
				if ($input.charCodeAt($pos) === 9651)
					$pos += 1;
				else
					$matchingFail("\"\u25b3\"");
				if ($pos === -1) {
					$pos = pos0;
					$objsLen = objsLen0;
					if ($input.substr($pos, 3) === "maj")
						$pos += 3;
					else
						$matchingFail("\"maj\"");
				}
			}
			$writeMemo(key, $pos !== -1 && $objs.slice(objsLen0, $objsLen));
		};

		function rule$minor() {
			var key = $pos * 18 + 8, pos0 = $pos, objsLen0 = $objsLen;
			if ($readMemo(key)) return;
			if ($input.substr($pos, 3) === "min")
				$pos += 3;
			else
				$matchingFail("\"min\"");
			if ($pos === -1) {
				$pos = pos0;
				$objsLen = objsLen0;
				if ($input.charCodeAt($pos) === 109)
					$pos += 1;
				else
					$matchingFail("\"m\"");
				if ($pos === -1) {
					$pos = pos0;
					$objsLen = objsLen0;
					if ($input.charCodeAt($pos) === 45)
						$pos += 1;
					else
						$matchingFail("\"-\"");
				}
			}
			$writeMemo(key, $pos !== -1 && $objs.slice(objsLen0, $objsLen));
		};

		function rule$augument() {
			var key = $pos * 18 + 9, pos0 = $pos, objsLen0 = $objsLen;
			if ($readMemo(key)) return;
			if ($input.substr($pos, 3) === "aug")
				$pos += 3;
			else
				$matchingFail("\"aug\"");
			if ($pos === -1) {
				$pos = pos0;
				$objsLen = objsLen0;
				if ($input.charCodeAt($pos) === 43)
					$pos += 1;
				else
					$matchingFail("\"+\"");
			}
			$writeMemo(key, $pos !== -1 && $objs.slice(objsLen0, $objsLen));
		};

		function rule$diminish() {
			var key = $pos * 18 + 10, pos0 = $pos, objsLen0 = $objsLen;
			if ($readMemo(key)) return;
			if ($input.substr($pos, 3) === "dim")
				$pos += 3;
			else
				$matchingFail("\"dim\"");
			if ($pos === -1) {
				$pos = pos0;
				$objsLen = objsLen0;
				if ($input.charCodeAt($pos) === 9675)
					$pos += 1;
				else
					$matchingFail("\"\u25cb\"");
			}
			$writeMemo(key, $pos !== -1 && $objs.slice(objsLen0, $objsLen));
		};

		function rule$half_diminish() {
			var key = $pos * 18 + 11, pos0 = $pos, objsLen0 = $objsLen;
			if ($readMemo(key)) return;
			if ($input.charCodeAt($pos) === 966)
				$pos += 1;
			else
				$matchingFail("\"\u03c6\"");
			$writeMemo(key, $pos !== -1 && $objs.slice(objsLen0, $objsLen));
		};

		function rule$tn_all() {
			var key = $pos * 18 + 12, pos0 = $pos, objsLen0 = $objsLen;
			if ($readMemo(key)) return;
			rule$itv_flat();
			if ($pos !== -1) {
				if ($input.charCodeAt($pos) === 53)
					$pos += 1;
				else
					$matchingFail("\"5\"");
				if ($pos !== -1) {
					$objs[$objsLen++] = "b5";
				}
			}
			if ($pos === -1) {
				$pos = pos0;
				$objsLen = objsLen0;
				rule$itv_sharp();
				if ($pos !== -1) {
					if ($input.charCodeAt($pos) === 53)
						$pos += 1;
					else
						$matchingFail("\"5\"");
					if ($pos !== -1) {
						$objs[$objsLen++] = "#5";
					}
				}
				if ($pos === -1) {
					$pos = pos0;
					$objsLen = objsLen0;
					rule$itv_flat();
					if ($pos !== -1) {
						if ($input.charCodeAt($pos) === 57)
							$pos += 1;
						else
							$matchingFail("\"9\"");
						if ($pos !== -1) {
							$objs[$objsLen++] = "b9";
						}
					}
					if ($pos === -1) {
						$pos = pos0;
						$objsLen = objsLen0;
						if ($input.charCodeAt($pos) === 57)
							$pos += 1;
						else
							$matchingFail("\"9\"");
						if ($pos !== -1) {
							$objs[$objsLen++] = "9";
						}
						if ($pos === -1) {
							$pos = pos0;
							$objsLen = objsLen0;
							rule$itv_sharp();
							if ($pos !== -1) {
								if ($input.charCodeAt($pos) === 57)
									$pos += 1;
								else
									$matchingFail("\"9\"");
								if ($pos !== -1) {
									$objs[$objsLen++] = "#9";
								}
							}
							if ($pos === -1) {
								$pos = pos0;
								$objsLen = objsLen0;
								if ($input.substr($pos, 2) === "11")
									$pos += 2;
								else
									$matchingFail("\"11\"");
								if ($pos !== -1) {
									$objs[$objsLen++] = "11";
								}
								if ($pos === -1) {
									$pos = pos0;
									$objsLen = objsLen0;
									rule$itv_sharp();
									if ($pos !== -1) {
										if ($input.substr($pos, 2) === "11")
											$pos += 2;
										else
											$matchingFail("\"11\"");
										if ($pos !== -1) {
											$objs[$objsLen++] = "#11";
										}
									}
									if ($pos === -1) {
										$pos = pos0;
										$objsLen = objsLen0;
										rule$itv_flat();
										if ($pos !== -1) {
											if ($input.substr($pos, 2) === "13")
												$pos += 2;
											else
												$matchingFail("\"13\"");
											if ($pos !== -1) {
												$objs[$objsLen++] = "b13";
											}
										}
										if ($pos === -1) {
											$pos = pos0;
											$objsLen = objsLen0;
											if ($input.substr($pos, 2) === "13")
												$pos += 2;
											else
												$matchingFail("\"13\"");
											if ($pos !== -1) {
												$objs[$objsLen++] = "13";
											}
										}
									}
								}
							}
						}
					}
				}
			}
			$writeMemo(key, $pos !== -1 && $objs.slice(objsLen0, $objsLen));
		};

		function rule$itv_sharp() {
			var key = $pos * 18 + 13, pos0 = $pos, objsLen0 = $objsLen;
			if ($readMemo(key)) return;
			if ($input.charCodeAt($pos) === 9839)
				$pos += 1;
			else
				$matchingFail("\"\u266f\"");
			if ($pos === -1) {
				$pos = pos0;
				$objsLen = objsLen0;
				if ($input.charCodeAt($pos) === 65283)
					$pos += 1;
				else
					$matchingFail("\"\uff03\"");
				if ($pos === -1) {
					$pos = pos0;
					$objsLen = objsLen0;
					if ($input.charCodeAt($pos) === 35)
						$pos += 1;
					else
						$matchingFail("\"#\"");
					if ($pos === -1) {
						$pos = pos0;
						$objsLen = objsLen0;
						if ($input.charCodeAt($pos) === 43)
							$pos += 1;
						else
							$matchingFail("\"+\"");
						if ($pos === -1) {
							$pos = pos0;
							$objsLen = objsLen0;
							if ($input.charCodeAt($pos) === 65291)
								$pos += 1;
							else
								$matchingFail("\"\uff0b\"");
						}
					}
				}
			}
			$writeMemo(key, $pos !== -1 && $objs.slice(objsLen0, $objsLen));
		};

		function rule$itv_flat() {
			var key = $pos * 18 + 14, pos0 = $pos, objsLen0 = $objsLen;
			if ($readMemo(key)) return;
			if ($input.charCodeAt($pos) === 9837)
				$pos += 1;
			else
				$matchingFail("\"\u266d\"");
			if ($pos === -1) {
				$pos = pos0;
				$objsLen = objsLen0;
				if ($input.charCodeAt($pos) === 98)
					$pos += 1;
				else
					$matchingFail("\"b\"");
				if ($pos === -1) {
					$pos = pos0;
					$objsLen = objsLen0;
					if ($input.charCodeAt($pos) === 45)
						$pos += 1;
					else
						$matchingFail("\"-\"");
					if ($pos === -1) {
						$pos = pos0;
						$objsLen = objsLen0;
						if ($input.charCodeAt($pos) === 8722)
							$pos += 1;
						else
							$matchingFail("\"\u2212\"");
					}
				}
			}
			$writeMemo(key, $pos !== -1 && $objs.slice(objsLen0, $objsLen));
		};

		function rule$delimiter() {
			var key = $pos * 18 + 15, pos0 = $pos, objsLen0 = $objsLen;
			if ($readMemo(key)) return;
			$errorMask += 1;
			if ($input.charCodeAt($pos) === 41)
				$pos += 1;
			else
				$matchingFail("\")\"");
			$errorMask -= 1;
			if ($pos !== -1) {
				$objsLen = objsLen0;
				$pos = pos0;
			}
			if ($pos === -1) {
				$pos = pos0;
				$objsLen = objsLen0;
				rule$space();
				if ($pos !== -1) {
					if ($input.charCodeAt($pos) === 44)
						$pos += 1;
					else
						$matchingFail("\",\"");
					if ($pos !== -1) {
						rule$space();
					}
				}
				if ($pos === -1) {
					$pos = pos0;
					$objsLen = objsLen0;
					var pos1 = $pos, objsLen1 = $objsLen;
					for (var i0 = 0; ; i0++) {
						if ($input.charCodeAt($pos) === 32)
							$pos += 1;
						else
							$matchingFail("\" \"");
						if ($pos !== -1) {
							if ($pos === pos1) throw new Error("Infinite loop detected.");
							pos1 = $pos;
							objsLen1 = $objsLen;
						} else {
							break;
						}
					}
					$pos = pos1;
					$objsLen = objsLen1;
					if (i0 < 1) $pos = -1;
				}
			}
			$writeMemo(key, $pos !== -1 && $objs.slice(objsLen0, $objsLen));
		};

		function rule$slash() {
			var key = $pos * 18 + 16, pos0 = $pos, objsLen0 = $objsLen;
			if ($readMemo(key)) return;
			rule$space();
			if ($pos !== -1) {
				var pos1 = $pos, objsLen1 = $objsLen;
				if ($input.charCodeAt($pos) === 47)
					$pos += 1;
				else
					$matchingFail("\"/\"");
				if ($pos === -1) {
					$pos = pos1;
					$objsLen = objsLen1;
					if ($input.charCodeAt($pos) === 65295)
						$pos += 1;
					else
						$matchingFail("\"\uff0f\"");
					if ($pos === -1) {
						$pos = pos1;
						$objsLen = objsLen1;
						if ($input.substr($pos, 2) === "on")
							$pos += 2;
						else
							$matchingFail("\"on\"");
					}
				}
				if ($pos !== -1) {
					rule$space();
				}
			}
			$writeMemo(key, $pos !== -1 && $objs.slice(objsLen0, $objsLen));
		};

		function rule$space() {
			var key = $pos * 18 + 17, pos0 = $pos, objsLen0 = $objsLen;
			if ($readMemo(key)) return;
			var pos1 = $pos, objsLen1 = $objsLen;
			while (true) {
				if ($input.charCodeAt($pos) === 32)
					$pos += 1;
				else
					$matchingFail("\" \"");
				if ($pos !== -1) {
					if ($pos === pos1) throw new Error("Infinite loop detected.");
					pos1 = $pos;
					objsLen1 = $objsLen;
				} else {
					break;
				}
			}
			$pos = pos1;
			$objsLen = objsLen1;
			$writeMemo(key, $pos !== -1 && $objs.slice(objsLen0, $objsLen));
		};

		function $matchingFail(match) {
			if ($errorMask === 0 && $failPos <= $pos) {
				match = $matchTable[$pos] ? $matchTable[$pos] : match;
				if ($failPos === $pos) {
					if ($failMatchs.indexOf(match) === -1)
						$failMatchs.push(match);
				} else {
					$failMatchs = [match];
					$failPos = $pos;
				}
			}
			$pos = -1;
		}

		function $joinByOr(strs) {
			if (strs.length === 0)
				return "";
			if (strs.length === 1)
				return strs[0];
			return strs.slice(0, strs.length - 1).join(", ") + " or " + strs[strs.length - 1];
		};

		function $readMemo(key) {
			var res = $memo[key];
			if (res !== undefined) {
				if (res !== $failureObj) {
					$pos = res.pos;
					for (var i = 0, il = res.objs.length; i < il; ++i)
						$objs[$objsLen++] = res.objs[i];
				} else {
					$pos = -1;
				}
				return true;
			}
			return false;
		}

		function $writeMemo(key, objs) {
			$memo[key] = objs ? {
				pos: $pos,
				objs: objs
			} : $failureObj;
		}

		rule$start();
		if ($pos !== -1) {
			if ($pos === $inputLength) {
				$objs.length = $objsLen;
				return $objs[0];
			}
			$matchingFail("end of input");
		}
		if ($failMatchs.length === 0)
			$failMatchs.push("something");
		var $line = ($input.slice(0, $failPos).match(/\n/g) || []).length;
		var $column = $failPos - $input.lastIndexOf("\n", $failPos - 1) - 1;
		var $errorMessage = "Line " + ($line + 1) + ", column " + $column + ": Expected " + $joinByOr($failMatchs) + " but " + (JSON.stringify($input[$failPos]) || "end of input") + " found.";
		throw new Error($errorMessage);
	};
	return $parse;
})();
